// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pri.Api.Pe.Infrastructure.Data;

#nullable disable

namespace Pri.Api.Pe.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApplicationUserSkill", b =>
                {
                    b.Property<Guid>("SkillsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SkillsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ApplicationUserSkill");
                });

            modelBuilder.Entity("JobSkill", b =>
                {
                    b.Property<Guid>("JobsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("JobsId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("JobSkill");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("fdf53031-87c4-44f5-bb6c-a8149cb18042"),
                            ConcurrencyStamp = "f9092f0b-b753-4acf-8083-4732e1425a1c",
                            Name = "Employer",
                            NormalizedName = "EMPLOYER"
                        },
                        new
                        {
                            Id = new Guid("408fbf17-984e-43c5-8794-5be95044ea17"),
                            ConcurrencyStamp = "f3a5c0fa-05dd-4e71-bc21-227f2c6a8d30",
                            Name = "Employee",
                            NormalizedName = "EMPLOYEE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("3bc600f9-9d3b-41f2-8fdc-7ddb0e992bb0"),
                            RoleId = new Guid("408fbf17-984e-43c5-8794-5be95044ea17")
                        },
                        new
                        {
                            UserId = new Guid("516bfea4-50f2-484b-9263-06543721980c"),
                            RoleId = new Guid("408fbf17-984e-43c5-8794-5be95044ea17")
                        },
                        new
                        {
                            UserId = new Guid("bead2b7a-449f-4ae3-9d63-6512573e43d4"),
                            RoleId = new Guid("408fbf17-984e-43c5-8794-5be95044ea17")
                        },
                        new
                        {
                            UserId = new Guid("d6a3334a-463e-4381-a503-afdfaf25f113"),
                            RoleId = new Guid("408fbf17-984e-43c5-8794-5be95044ea17")
                        },
                        new
                        {
                            UserId = new Guid("97137476-aff3-4719-b14f-35d5718a628b"),
                            RoleId = new Guid("408fbf17-984e-43c5-8794-5be95044ea17")
                        },
                        new
                        {
                            UserId = new Guid("b8cf6d3d-a5d8-4a22-b97e-ebd5855a4733"),
                            RoleId = new Guid("408fbf17-984e-43c5-8794-5be95044ea17")
                        },
                        new
                        {
                            UserId = new Guid("1cadb656-4da5-4a3a-983d-b7ea4201f50f"),
                            RoleId = new Guid("408fbf17-984e-43c5-8794-5be95044ea17")
                        },
                        new
                        {
                            UserId = new Guid("d722f79f-93e9-480e-b070-728955029e23"),
                            RoleId = new Guid("408fbf17-984e-43c5-8794-5be95044ea17")
                        },
                        new
                        {
                            UserId = new Guid("f2890345-d8d9-455a-bbd0-62c7a4c8be36"),
                            RoleId = new Guid("408fbf17-984e-43c5-8794-5be95044ea17")
                        },
                        new
                        {
                            UserId = new Guid("b115be95-4c8e-41a3-ba1e-899e73b2a87a"),
                            RoleId = new Guid("fdf53031-87c4-44f5-bb6c-a8149cb18042")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("JobId");

                    b.HasIndex("StatusId");

                    b.ToTable("Applications");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f043dec9-0aa8-406b-bb80-5e54f064ece2"),
                            CandidateId = new Guid("3bc600f9-9d3b-41f2-8fdc-7ddb0e992bb0"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("a94f3130-9fa8-464f-b3fc-ea1541a4327c"),
                            Salary = 0.0,
                            StatusId = new Guid("ed1bf698-df1c-429e-8759-eaef61241f2e"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6e2f2665-f135-40fd-ad31-553b5cbc5608"),
                            CandidateId = new Guid("516bfea4-50f2-484b-9263-06543721980c"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("017ad50d-efc1-47ef-a799-0e74c4c1e330"),
                            Salary = 0.0,
                            StatusId = new Guid("e2a3809f-b985-48bc-8769-bb435a3204f7"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("baecb136-f3f7-4e00-b8bf-80b7b19c1c73"),
                            CandidateId = new Guid("bead2b7a-449f-4ae3-9d63-6512573e43d4"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("d495591e-b0bc-4010-9ee0-ce537589e82d"),
                            Salary = 0.0,
                            StatusId = new Guid("5a3fe95e-b371-44d1-86e2-b6bf5fb97886"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9461ac78-2c5f-4577-bbeb-cd2551d2fd3c"),
                            CandidateId = new Guid("d6a3334a-463e-4381-a503-afdfaf25f113"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("d5fa2f0b-0eda-406b-9c3d-c6813ee1dded"),
                            Salary = 0.0,
                            StatusId = new Guid("ed1bf698-df1c-429e-8759-eaef61241f2e"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("643b31d2-1b7b-4817-80ac-7c83e6bd8a7c"),
                            CandidateId = new Guid("97137476-aff3-4719-b14f-35d5718a628b"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("69f40e2f-c64f-42e9-ac3d-841fb92b0ed2"),
                            Salary = 0.0,
                            StatusId = new Guid("e2a3809f-b985-48bc-8769-bb435a3204f7"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ff518c73-1b8d-40a9-9ec3-6b539dfe5624"),
                            CandidateId = new Guid("b8cf6d3d-a5d8-4a22-b97e-ebd5855a4733"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("fdb1c55e-e631-4445-a59a-ed3b466e0caa"),
                            Salary = 0.0,
                            StatusId = new Guid("5a3fe95e-b371-44d1-86e2-b6bf5fb97886"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9921d7bd-95fd-422a-94bf-6cca3ba7193f"),
                            CandidateId = new Guid("1cadb656-4da5-4a3a-983d-b7ea4201f50f"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("412e2398-0488-45aa-88ee-4ae03981f54e"),
                            Salary = 0.0,
                            StatusId = new Guid("ed1bf698-df1c-429e-8759-eaef61241f2e"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d5aeb192-a9ce-4721-8f49-4778232e2fd7"),
                            CandidateId = new Guid("d722f79f-93e9-480e-b070-728955029e23"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("5fe23f48-b440-4fd0-a132-3db8437feda6"),
                            Salary = 0.0,
                            StatusId = new Guid("e2a3809f-b985-48bc-8769-bb435a3204f7"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ac4cb22b-6cf9-4137-8714-32873499cd0b"),
                            CandidateId = new Guid("f2890345-d8d9-455a-bbd0-62c7a4c8be36"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("c4e34fcc-1514-4dbc-9124-aa569dc51a28"),
                            Salary = 0.0,
                            StatusId = new Guid("5a3fe95e-b371-44d1-86e2-b6bf5fb97886"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("200f88bd-b2d2-40d6-911a-298ed3e45f88"),
                            CandidateId = new Guid("3bc600f9-9d3b-41f2-8fdc-7ddb0e992bb0"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("1a41b746-a5e0-4e52-8cee-ee8c02271f5c"),
                            Salary = 0.0,
                            StatusId = new Guid("ed1bf698-df1c-429e-8759-eaef61241f2e"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ApplicationStatus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ed1bf698-df1c-429e-8759-eaef61241f2e"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pending",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e2a3809f-b985-48bc-8769-bb435a3204f7"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Accepted",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5a3fe95e-b371-44d1-86e2-b6bf5fb97886"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rejected",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Lastname")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b115be95-4c8e-41a3-ba1e-899e73b2a87a"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bb168ba2-15a7-4c09-9c9c-3022d3d06e75",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user1@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "1",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@TEST.COM",
                            NormalizedUserName = "USER1",
                            PasswordHash = "AQAAAAEAACcQAAAAECygkabIwdD2CACrxnEEyWoN0JSW7J4dEbsU7jZTRE9KoW7oNi3wLHFvzxS4FHAE4Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9b1be47a-9480-466d-8513-b529dd2c6332",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user1"
                        },
                        new
                        {
                            Id = new Guid("3bc600f9-9d3b-41f2-8fdc-7ddb0e992bb0"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cacae661-0ec2-41a0-9742-fa823705ae6a",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user2@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "2",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@TEST.COM",
                            NormalizedUserName = "USER2",
                            PasswordHash = "AQAAAAEAACcQAAAAEPb74XlWHeifWN1McfZ9kHlZVFO62mxdIyNKGJD2NPKS+zKtzzVgTVea8NZdPTm1iA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f13cb576-8b38-47a2-a4d9-03d0b43b7b09",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user2"
                        },
                        new
                        {
                            Id = new Guid("516bfea4-50f2-484b-9263-06543721980c"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8da9e0d2-92d0-4da6-8927-0f29f8c4f18b",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user3@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "3",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@TEST.COM",
                            NormalizedUserName = "USER3",
                            PasswordHash = "AQAAAAEAACcQAAAAEEpgHSOgxD85m3d0GFVUGLK+dUyrpPayj0+cx7PHrfhxDvc/HBbLZLsI5AEHVAPvqQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8b2a773f-a326-43c8-89ef-5d185aab8753",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user3"
                        },
                        new
                        {
                            Id = new Guid("bead2b7a-449f-4ae3-9d63-6512573e43d4"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c0e576d3-72b7-4e79-aa2a-6981017d1ed6",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user4@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "4",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@TEST.COM",
                            NormalizedUserName = "USER4",
                            PasswordHash = "AQAAAAEAACcQAAAAED3dpYMFwccu2g+oFGEbrWCU4YzPl1B5N5W7+X42yLo1pY7y8SdCxjXxBoIRJxlClw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "afd6ceca-6892-44fe-b7b7-4fd14a4fb8fe",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user4"
                        },
                        new
                        {
                            Id = new Guid("d6a3334a-463e-4381-a503-afdfaf25f113"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f09d7003-9af5-409f-96ea-6a8d1e688073",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user5@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "5",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@TEST.COM",
                            NormalizedUserName = "USER5",
                            PasswordHash = "AQAAAAEAACcQAAAAELI7w1c09McdMvahaXZogJWJXZEhgT2TehZ5we2FEhFTQZpbZ7d18T+JHB87UxxqrA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3e5b949b-29bb-41de-84aa-a8b2b0126052",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user5"
                        },
                        new
                        {
                            Id = new Guid("97137476-aff3-4719-b14f-35d5718a628b"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4dbec063-18c5-418b-8133-c4e89901e9be",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user6@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "6",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@TEST.COM",
                            NormalizedUserName = "USER6",
                            PasswordHash = "AQAAAAEAACcQAAAAEAPo7H5Q0KsClVW8Ypa2oaFoOh1PEZLJdDeey0XBKx/AeOFqNqaYzz+CTH/WSfyGrA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6e5ca000-3de1-4d54-92ff-19a08b727ff4",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user6"
                        },
                        new
                        {
                            Id = new Guid("b8cf6d3d-a5d8-4a22-b97e-ebd5855a4733"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "704dad85-01a7-4484-913a-f09b380f6778",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user7@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "7",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@TEST.COM",
                            NormalizedUserName = "USER7",
                            PasswordHash = "AQAAAAEAACcQAAAAEOF85YU6Ec4yxH27c4F5YS693KMNZ9ZylzdljJiHSBGCa6Nq71a5ZPuCeSCLZKi3ug==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "eec5af2b-eb32-4991-ab41-07c86f2dc38b",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user7"
                        },
                        new
                        {
                            Id = new Guid("1cadb656-4da5-4a3a-983d-b7ea4201f50f"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ef30a85c-0b73-4f5c-9fb4-5e9d5418c13e",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user8@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "8",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@TEST.COM",
                            NormalizedUserName = "USER8",
                            PasswordHash = "AQAAAAEAACcQAAAAEHKCBKdL+D6tWP7vOZk/vCsCAapcMRXR1hq4KnwGERFVDmvl2V1cKmFa9KrlV3AUGA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "234b6822-e91f-4c36-a548-82998e4d3869",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user8"
                        },
                        new
                        {
                            Id = new Guid("d722f79f-93e9-480e-b070-728955029e23"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "653048e7-02e9-416f-82aa-8fdb3e3b36f9",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user9@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "9",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@TEST.COM",
                            NormalizedUserName = "USER9",
                            PasswordHash = "AQAAAAEAACcQAAAAEJBaG6FeMCZJE2BRiv3pXUnZkgX2Mz7Nf4BOQDmtPQO2FY976cZcC2gDYNtllcmvpw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "53130005-7144-415e-8a43-da474dd64c26",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user9"
                        },
                        new
                        {
                            Id = new Guid("f2890345-d8d9-455a-bbd0-62c7a4c8be36"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d7acefd1-5450-4904-b533-5407c17a68ad",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user10@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "10",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER10@TEST.COM",
                            NormalizedUserName = "USER10",
                            PasswordHash = "AQAAAAEAACcQAAAAED7V1TRnqVfQxsv0tboOvJ2+hTsRmO1BoFcsJ/8zGTmiapp1wlhT86Yloky1z6PBKQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "bc33f8ed-c3d0-4b7c-8f30-1e0880a7ce29",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user10"
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a94f3130-9fa8-464f-b3fc-ea1541a4327c"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job1 description",
                            EmployerId = new Guid("b115be95-4c8e-41a3-ba1e-899e73b2a87a"),
                            Name = "Job1",
                            Salary = 10.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("017ad50d-efc1-47ef-a799-0e74c4c1e330"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job2 description",
                            EmployerId = new Guid("b115be95-4c8e-41a3-ba1e-899e73b2a87a"),
                            Name = "Job2",
                            Salary = 20.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d495591e-b0bc-4010-9ee0-ce537589e82d"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job3 description",
                            EmployerId = new Guid("b115be95-4c8e-41a3-ba1e-899e73b2a87a"),
                            Name = "Job3",
                            Salary = 30.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d5fa2f0b-0eda-406b-9c3d-c6813ee1dded"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job4 description",
                            EmployerId = new Guid("b115be95-4c8e-41a3-ba1e-899e73b2a87a"),
                            Name = "Job4",
                            Salary = 40.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("69f40e2f-c64f-42e9-ac3d-841fb92b0ed2"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job5 description",
                            EmployerId = new Guid("b115be95-4c8e-41a3-ba1e-899e73b2a87a"),
                            Name = "Job5",
                            Salary = 50.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("fdb1c55e-e631-4445-a59a-ed3b466e0caa"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job6 description",
                            EmployerId = new Guid("b115be95-4c8e-41a3-ba1e-899e73b2a87a"),
                            Name = "Job6",
                            Salary = 60.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("412e2398-0488-45aa-88ee-4ae03981f54e"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job7 description",
                            EmployerId = new Guid("b115be95-4c8e-41a3-ba1e-899e73b2a87a"),
                            Name = "Job7",
                            Salary = 70.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5fe23f48-b440-4fd0-a132-3db8437feda6"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job8 description",
                            EmployerId = new Guid("b115be95-4c8e-41a3-ba1e-899e73b2a87a"),
                            Name = "Job8",
                            Salary = 80.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c4e34fcc-1514-4dbc-9124-aa569dc51a28"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job9 description",
                            EmployerId = new Guid("b115be95-4c8e-41a3-ba1e-899e73b2a87a"),
                            Name = "Job9",
                            Salary = 90.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1a41b746-a5e0-4e52-8cee-ee8c02271f5c"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job10 description",
                            EmployerId = new Guid("b115be95-4c8e-41a3-ba1e-899e73b2a87a"),
                            Name = "Job10",
                            Salary = 100.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0d22757f-37fa-4000-9002-9e77f5610008"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("3bc600f9-9d3b-41f2-8fdc-7ddb0e992bb0"),
                            SenderId = new Guid("b115be95-4c8e-41a3-ba1e-899e73b2a87a"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("eb1e1522-d985-49c9-8a81-05ddd080b835"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("516bfea4-50f2-484b-9263-06543721980c"),
                            SenderId = new Guid("3bc600f9-9d3b-41f2-8fdc-7ddb0e992bb0"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c31ebeab-26d4-4891-966b-e56120acee20"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("bead2b7a-449f-4ae3-9d63-6512573e43d4"),
                            SenderId = new Guid("516bfea4-50f2-484b-9263-06543721980c"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0a9230c7-b555-42e8-9531-2c43741b2d9e"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("d6a3334a-463e-4381-a503-afdfaf25f113"),
                            SenderId = new Guid("bead2b7a-449f-4ae3-9d63-6512573e43d4"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f0dfbd91-230b-42d6-b94b-578dcf777b16"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("97137476-aff3-4719-b14f-35d5718a628b"),
                            SenderId = new Guid("d6a3334a-463e-4381-a503-afdfaf25f113"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5132de27-cad5-4ca6-9c5f-225b6273f17f"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("b8cf6d3d-a5d8-4a22-b97e-ebd5855a4733"),
                            SenderId = new Guid("97137476-aff3-4719-b14f-35d5718a628b"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("41abd2fa-bd36-43ee-a043-340034366718"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("1cadb656-4da5-4a3a-983d-b7ea4201f50f"),
                            SenderId = new Guid("b8cf6d3d-a5d8-4a22-b97e-ebd5855a4733"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("37ec2304-81b2-4a7c-8edc-ec342dde029f"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("d722f79f-93e9-480e-b070-728955029e23"),
                            SenderId = new Guid("1cadb656-4da5-4a3a-983d-b7ea4201f50f"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6505b212-3dc4-4b2d-9fc7-1d27ac049c0f"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("f2890345-d8d9-455a-bbd0-62c7a4c8be36"),
                            SenderId = new Guid("d722f79f-93e9-480e-b070-728955029e23"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e1d27203-6d4b-49bf-ac8a-ec6fc214f145"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("b115be95-4c8e-41a3-ba1e-899e73b2a87a"),
                            SenderId = new Guid("f2890345-d8d9-455a-bbd0-62c7a4c8be36"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("RevieweeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReviewerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RevieweeId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4daa2a5a-0d6d-4b6d-bb87-383a7684071a"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 1,
                            RevieweeId = new Guid("3bc600f9-9d3b-41f2-8fdc-7ddb0e992bb0"),
                            ReviewerId = new Guid("b115be95-4c8e-41a3-ba1e-899e73b2a87a"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d4889cea-b60d-43e6-ab14-01ef58da30c7"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 2,
                            RevieweeId = new Guid("516bfea4-50f2-484b-9263-06543721980c"),
                            ReviewerId = new Guid("3bc600f9-9d3b-41f2-8fdc-7ddb0e992bb0"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a007117d-c9a4-4c7b-86ea-e1d280c722a8"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 3,
                            RevieweeId = new Guid("bead2b7a-449f-4ae3-9d63-6512573e43d4"),
                            ReviewerId = new Guid("516bfea4-50f2-484b-9263-06543721980c"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("32387935-5a13-4ba4-a4ed-02ee5172a406"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4,
                            RevieweeId = new Guid("d6a3334a-463e-4381-a503-afdfaf25f113"),
                            ReviewerId = new Guid("bead2b7a-449f-4ae3-9d63-6512573e43d4"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("934d946b-bc01-4a93-a298-2fbf7b191d0c"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 0,
                            RevieweeId = new Guid("97137476-aff3-4719-b14f-35d5718a628b"),
                            ReviewerId = new Guid("d6a3334a-463e-4381-a503-afdfaf25f113"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("937f5dd7-7d34-4aff-8b2c-5f0b82153efe"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 1,
                            RevieweeId = new Guid("b8cf6d3d-a5d8-4a22-b97e-ebd5855a4733"),
                            ReviewerId = new Guid("97137476-aff3-4719-b14f-35d5718a628b"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6b36f138-38d8-4ecc-b989-dd04b048c7bb"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 2,
                            RevieweeId = new Guid("1cadb656-4da5-4a3a-983d-b7ea4201f50f"),
                            ReviewerId = new Guid("b8cf6d3d-a5d8-4a22-b97e-ebd5855a4733"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cb002623-5463-4a68-9494-1aaab4de2074"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 3,
                            RevieweeId = new Guid("d722f79f-93e9-480e-b070-728955029e23"),
                            ReviewerId = new Guid("1cadb656-4da5-4a3a-983d-b7ea4201f50f"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6cb99ba6-44dd-4a5a-a562-5306f43e9b28"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4,
                            RevieweeId = new Guid("f2890345-d8d9-455a-bbd0-62c7a4c8be36"),
                            ReviewerId = new Guid("d722f79f-93e9-480e-b070-728955029e23"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cb233d74-deda-4a32-85c9-a0b679f2f7ad"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 0,
                            RevieweeId = new Guid("b115be95-4c8e-41a3-ba1e-899e73b2a87a"),
                            ReviewerId = new Guid("f2890345-d8d9-455a-bbd0-62c7a4c8be36"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("447abb77-d290-420d-b78f-c74b61394d8f"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Programming",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("00b1cd09-339c-42e9-9f59-6b721331eb65"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gardening",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2637d36d-4c9e-4e01-aca4-ab3866ae9744"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cooking",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e42cc64d-d081-494f-9f77-20be7de0922e"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cleaning",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("468848a5-679b-4fe0-8b03-74e90fc0c751"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Driving",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c9bfda14-666a-41e8-a734-8f27fbd582fb"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Teaching",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e0204ca7-47e2-4d8f-ac46-869e8fd8b70d"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Writing",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9932052f-3e95-418a-8942-5070d72eecd4"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Maths",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("60f13d0a-0a51-4efc-8c73-dc7611b74e6d"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Language",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4403bedc-0d89-4793-8f21-380fd9680c7e"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Painting",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bbfcf658-f96b-4996-a6df-4bb43f851ee1"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Photography",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("34d14ecb-33be-4696-bed9-0465398faf3c"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sewing",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ApplicationUserSkill", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobSkill", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.Job", null)
                        .WithMany()
                        .HasForeignKey("JobsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Application", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Candidate")
                        .WithMany("Applications")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.Job", "Job")
                        .WithMany("Applications")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationStatus", "Status")
                        .WithMany("Applications")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Job");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Job", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Employer")
                        .WithMany("Jobs")
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employer");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Message", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Sender")
                        .WithMany("SendMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Review", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Reviewee")
                        .WithMany("ReceivedReviews")
                        .HasForeignKey("RevieweeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Reviewer")
                        .WithMany("MadeReviews")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Reviewee");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationStatus", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationUser", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Jobs");

                    b.Navigation("MadeReviews");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("ReceivedReviews");

                    b.Navigation("SendMessages");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Job", b =>
                {
                    b.Navigation("Applications");
                });
#pragma warning restore 612, 618
        }
    }
}
