// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pri.Api.Pe.Infrastructure.Data;

#nullable disable

namespace Pri.Api.Pe.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApplicationUserSkill", b =>
                {
                    b.Property<Guid>("SkillsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SkillsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ApplicationUserSkill");
                });

            modelBuilder.Entity("JobSkill", b =>
                {
                    b.Property<Guid>("JobsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("JobsId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("JobSkill");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6e364dc8-9d74-4c8c-a58d-7f88ec048ec4"),
                            ConcurrencyStamp = "7e64f817-dcca-4060-b9f9-e253cfecab77",
                            Name = "Employer",
                            NormalizedName = "EMPLOYER"
                        },
                        new
                        {
                            Id = new Guid("6553de03-560d-432c-8d87-9d77d2e49f46"),
                            ConcurrencyStamp = "90efa95d-33fe-43be-a432-dc8b406a50cf",
                            Name = "Employee",
                            NormalizedName = "EMPLOYEE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("beb3df18-bbfe-4dd7-b911-26929942fd0c"),
                            RoleId = new Guid("6553de03-560d-432c-8d87-9d77d2e49f46")
                        },
                        new
                        {
                            UserId = new Guid("2450bfe3-6f14-4dcd-a303-fc5269301eda"),
                            RoleId = new Guid("6553de03-560d-432c-8d87-9d77d2e49f46")
                        },
                        new
                        {
                            UserId = new Guid("279f9707-f610-4409-a8f8-3bb5ac0d12ee"),
                            RoleId = new Guid("6553de03-560d-432c-8d87-9d77d2e49f46")
                        },
                        new
                        {
                            UserId = new Guid("fa8125ac-58bc-4594-93e4-0c05303d4b46"),
                            RoleId = new Guid("6553de03-560d-432c-8d87-9d77d2e49f46")
                        },
                        new
                        {
                            UserId = new Guid("5d9561f9-7ce0-4aa2-bc92-c7a826d1a998"),
                            RoleId = new Guid("6553de03-560d-432c-8d87-9d77d2e49f46")
                        },
                        new
                        {
                            UserId = new Guid("54693490-d13b-4f1a-9963-ba5991175bd9"),
                            RoleId = new Guid("6553de03-560d-432c-8d87-9d77d2e49f46")
                        },
                        new
                        {
                            UserId = new Guid("a1f1a7bb-25ff-4887-a076-b90d7598d534"),
                            RoleId = new Guid("6553de03-560d-432c-8d87-9d77d2e49f46")
                        },
                        new
                        {
                            UserId = new Guid("ef6ac2a7-9744-46b1-9f16-88befa7a5aa3"),
                            RoleId = new Guid("6553de03-560d-432c-8d87-9d77d2e49f46")
                        },
                        new
                        {
                            UserId = new Guid("d9d59f68-e255-4547-bb08-a648d0ca1c8a"),
                            RoleId = new Guid("6553de03-560d-432c-8d87-9d77d2e49f46")
                        },
                        new
                        {
                            UserId = new Guid("8256d54a-adc9-4c13-b430-36e462764deb"),
                            RoleId = new Guid("6553de03-560d-432c-8d87-9d77d2e49f46")
                        },
                        new
                        {
                            UserId = new Guid("67cf48e0-381c-49f9-a98a-c46fffe0b1f5"),
                            RoleId = new Guid("6e364dc8-9d74-4c8c-a58d-7f88ec048ec4")
                        },
                        new
                        {
                            UserId = new Guid("c83d7acc-a238-4f58-9375-03104a08f919"),
                            RoleId = new Guid("6e364dc8-9d74-4c8c-a58d-7f88ec048ec4")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("JobId");

                    b.HasIndex("StatusId");

                    b.ToTable("Applications");

                    b.HasData(
                        new
                        {
                            Id = new Guid("04354825-43f9-423a-8f8f-5a9de7e451ad"),
                            CandidateId = new Guid("beb3df18-bbfe-4dd7-b911-26929942fd0c"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("bd6f48ee-22c8-4516-91de-adef11c11c81"),
                            Salary = 0.0,
                            StatusId = new Guid("f32e1f64-a7f9-488b-9952-cbb7fa738f47"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3cca1f47-1456-4a86-bb6f-86c6548f4826"),
                            CandidateId = new Guid("2450bfe3-6f14-4dcd-a303-fc5269301eda"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("3d693462-f31b-47ae-917c-c28f8173d395"),
                            Salary = 0.0,
                            StatusId = new Guid("66f6913c-6a6a-4b42-8d6b-c3e02d89db5d"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("28756f65-9aea-4cfb-a04a-245fcd3dfe67"),
                            CandidateId = new Guid("279f9707-f610-4409-a8f8-3bb5ac0d12ee"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("6f4b814f-7074-4b65-9456-10946dd67c81"),
                            Salary = 0.0,
                            StatusId = new Guid("c172676e-19e9-4582-b798-d3efee72e2ee"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5bffc899-246b-41ea-973e-12a362507e3b"),
                            CandidateId = new Guid("fa8125ac-58bc-4594-93e4-0c05303d4b46"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("306c7179-62cc-47d3-8297-87c088316d54"),
                            Salary = 0.0,
                            StatusId = new Guid("f32e1f64-a7f9-488b-9952-cbb7fa738f47"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b6dd5a25-9655-4c5d-b803-f79f1e920dba"),
                            CandidateId = new Guid("5d9561f9-7ce0-4aa2-bc92-c7a826d1a998"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("507e0060-6182-4b0f-ac52-42c9e15a0bcb"),
                            Salary = 0.0,
                            StatusId = new Guid("66f6913c-6a6a-4b42-8d6b-c3e02d89db5d"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2fb8d064-6fa7-4551-ad92-f4351ed63a42"),
                            CandidateId = new Guid("54693490-d13b-4f1a-9963-ba5991175bd9"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("77de4b89-8a38-47d1-963e-1f7b687cb54e"),
                            Salary = 0.0,
                            StatusId = new Guid("c172676e-19e9-4582-b798-d3efee72e2ee"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cfd4d6be-8b28-45db-98c8-34b13a734e07"),
                            CandidateId = new Guid("a1f1a7bb-25ff-4887-a076-b90d7598d534"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("1533a99b-64d8-47aa-8f0c-10df01d93e4b"),
                            Salary = 0.0,
                            StatusId = new Guid("f32e1f64-a7f9-488b-9952-cbb7fa738f47"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8d2ec355-5090-4f88-a534-103c67401830"),
                            CandidateId = new Guid("ef6ac2a7-9744-46b1-9f16-88befa7a5aa3"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("2e139a48-d013-4f65-9f11-d9673af889d8"),
                            Salary = 0.0,
                            StatusId = new Guid("66f6913c-6a6a-4b42-8d6b-c3e02d89db5d"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9c246882-320d-4ba9-bd24-637fbf12b99c"),
                            CandidateId = new Guid("d9d59f68-e255-4547-bb08-a648d0ca1c8a"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("4b5196aa-5897-47c9-917d-4a8901c5516c"),
                            Salary = 0.0,
                            StatusId = new Guid("c172676e-19e9-4582-b798-d3efee72e2ee"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9ddf4a5f-3980-4665-af07-44cabd653dab"),
                            CandidateId = new Guid("8256d54a-adc9-4c13-b430-36e462764deb"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("6a386cc9-4126-45ec-ac5a-6235497a04ae"),
                            Salary = 0.0,
                            StatusId = new Guid("f32e1f64-a7f9-488b-9952-cbb7fa738f47"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ApplicationStatus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f32e1f64-a7f9-488b-9952-cbb7fa738f47"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pending",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("66f6913c-6a6a-4b42-8d6b-c3e02d89db5d"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Accepted",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c172676e-19e9-4582-b798-d3efee72e2ee"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rejected",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Lastname")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c83d7acc-a238-4f58-9375-03104a08f919"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "560bd52f-a213-4c0e-924c-8badecb077bf",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user1@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "1",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@TEST.COM",
                            NormalizedUserName = "USER1",
                            PasswordHash = "AQAAAAEAACcQAAAAENFcxBBl3CMJrTVjiYZRjRSTU/QCUsG/1bqCkCFqUzjNP+rfI3e4dOm3exO5s5HDpA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d168167c-8145-41a0-9406-3ace685b908a",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user1"
                        },
                        new
                        {
                            Id = new Guid("beb3df18-bbfe-4dd7-b911-26929942fd0c"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "d19bd59b-ffc4-49cc-8b7f-31b024776df6",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user2@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "2",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@TEST.COM",
                            NormalizedUserName = "USER2",
                            PasswordHash = "AQAAAAEAACcQAAAAEKBHzrpU+6Hf9wIWsTGBNakLyFTL1/3SJOG5KOk87zKiYaSvF9DJeusCBRcJQODU+g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "900c6b08-672d-422f-a6ac-0420533373f3",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user2"
                        },
                        new
                        {
                            Id = new Guid("2450bfe3-6f14-4dcd-a303-fc5269301eda"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f197ccb9-3e85-40e5-969b-522fffc5332d",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user3@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "3",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@TEST.COM",
                            NormalizedUserName = "USER3",
                            PasswordHash = "AQAAAAEAACcQAAAAEE5z2K2LXxViyRGng0xw5sBCfQRLCDtsl3PSkxnUgbz3/0Ru8J7TMdcL+fj0vPNGeg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "06fe8b6c-b535-4538-8ac2-cf8506544003",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user3"
                        },
                        new
                        {
                            Id = new Guid("279f9707-f610-4409-a8f8-3bb5ac0d12ee"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "30c51f38-888e-405c-bb01-6ed39dab828c",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user4@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "4",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@TEST.COM",
                            NormalizedUserName = "USER4",
                            PasswordHash = "AQAAAAEAACcQAAAAEKOP8zsVJM1nOjdC2MMZg2hnSZdHKjIv9yIXoDurTP0xgBksYAYrOxOwpl/hxDgwWg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "35fb298b-1bf6-452b-9fce-635b822fa495",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user4"
                        },
                        new
                        {
                            Id = new Guid("fa8125ac-58bc-4594-93e4-0c05303d4b46"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5080582a-fa6a-4790-8f0d-24378771893c",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user5@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "5",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@TEST.COM",
                            NormalizedUserName = "USER5",
                            PasswordHash = "AQAAAAEAACcQAAAAEP7bJBJRWaUFL5DtzAvv1PXbv5tzSdiUB8Mlkw+EaD+AE7XBuCewcs2PpAj1nYSHJQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "947e2a8d-fdab-40f7-a02c-81841e5cf4fd",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user5"
                        },
                        new
                        {
                            Id = new Guid("5d9561f9-7ce0-4aa2-bc92-c7a826d1a998"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5c845ac3-7401-4e52-885f-1c61c2f1d04c",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user6@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "6",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@TEST.COM",
                            NormalizedUserName = "USER6",
                            PasswordHash = "AQAAAAEAACcQAAAAENIEKRD7UlkphfRm5FQ3holEc+hlomooZv/BjLS4lm8Vd6e7TwMvExN3Fddf8XSfGg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d61df80d-0c96-4781-9997-95df23c10c78",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user6"
                        },
                        new
                        {
                            Id = new Guid("54693490-d13b-4f1a-9963-ba5991175bd9"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "f477a825-bcfb-4a7b-9bfc-2a4636eb1da4",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user7@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "7",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@TEST.COM",
                            NormalizedUserName = "USER7",
                            PasswordHash = "AQAAAAEAACcQAAAAEIE1mvP+bwBM5W9CFs+IOpNBDXkfE1wwJLuZHg/7ivoilcBF2lltJ0Xm4oxaox4eag==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4bc10cd9-9a54-47a1-9f4a-e6295f52d7d8",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user7"
                        },
                        new
                        {
                            Id = new Guid("a1f1a7bb-25ff-4887-a076-b90d7598d534"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "95d7ba98-6fc0-494d-99f4-66ab0b135e6a",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user8@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "8",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@TEST.COM",
                            NormalizedUserName = "USER8",
                            PasswordHash = "AQAAAAEAACcQAAAAENrRm3Ti66pBOVRDsOJRkfo/PxnsWek9evN2A/VHsjKQC7eEDSb+DLrCWptq9mvzrg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3b62a731-40ce-44cc-877c-5d958fdaf937",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user8"
                        },
                        new
                        {
                            Id = new Guid("ef6ac2a7-9744-46b1-9f16-88befa7a5aa3"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "27761332-6eb1-425f-932f-0df98a8bf293",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user9@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "9",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@TEST.COM",
                            NormalizedUserName = "USER9",
                            PasswordHash = "AQAAAAEAACcQAAAAECmNRZgtWZM77fppeFauEJfMWyQHh18wJPG+5qsdxABtTLvjPc45AyZGtvUuzWTk8A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "a4aa4f41-5f8e-4c99-bb36-b0ecf8226c3e",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user9"
                        },
                        new
                        {
                            Id = new Guid("d9d59f68-e255-4547-bb08-a648d0ca1c8a"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "6b5661d2-7f86-473c-9698-81cbc0b79446",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user10@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "10",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER10@TEST.COM",
                            NormalizedUserName = "USER10",
                            PasswordHash = "AQAAAAEAACcQAAAAECcIZ+raCFymBIr60ClSLz3S4vgctZdEM1UZhngX86WH2XbR8YrDe7JFCuxrs+4Wkg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "158b6c7e-e4f2-407c-8c4b-89268fe1b0dc",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user10"
                        },
                        new
                        {
                            Id = new Guid("8256d54a-adc9-4c13-b430-36e462764deb"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "19c47e0a-d05c-4ebd-854d-136a5c38af45",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user@pri.be",
                            EmailConfirmed = true,
                            Firstname = "Seed",
                            Lastname = "User",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER@PRI.BE",
                            NormalizedUserName = "PRIUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAEEjQNaGo4vq3G+Rc0MyJnTNRuIzR8qSV015E03g6F1Bszdc/nPSgDF5LWC+xf3rZcQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "80baf0e4-86b1-44ec-999e-98a1d5d58fe7",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "PriUser"
                        },
                        new
                        {
                            Id = new Guid("67cf48e0-381c-49f9-a98a-c46fffe0b1f5"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b1f827b3-b047-425c-a761-d81ac3b85c44",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@pri.be",
                            EmailConfirmed = true,
                            Firstname = "Seed",
                            Lastname = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@PRI.BE",
                            NormalizedUserName = "PRIADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEK3UhUBhctZ65kyHzTgey1smiQFqDcyvezDb7YvSFX15JbkLGE+Nhyr6nqsOYXndfA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "262baea8-dfbb-46a6-bf1a-99c95c12fcb9",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "PriAdmin"
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bd6f48ee-22c8-4516-91de-adef11c11c81"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job1 description",
                            EmployerId = new Guid("c83d7acc-a238-4f58-9375-03104a08f919"),
                            Name = "Job1",
                            Salary = 10.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3d693462-f31b-47ae-917c-c28f8173d395"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job2 description",
                            EmployerId = new Guid("c83d7acc-a238-4f58-9375-03104a08f919"),
                            Name = "Job2",
                            Salary = 20.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6f4b814f-7074-4b65-9456-10946dd67c81"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job3 description",
                            EmployerId = new Guid("c83d7acc-a238-4f58-9375-03104a08f919"),
                            Name = "Job3",
                            Salary = 30.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("306c7179-62cc-47d3-8297-87c088316d54"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job4 description",
                            EmployerId = new Guid("c83d7acc-a238-4f58-9375-03104a08f919"),
                            Name = "Job4",
                            Salary = 40.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("507e0060-6182-4b0f-ac52-42c9e15a0bcb"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job5 description",
                            EmployerId = new Guid("c83d7acc-a238-4f58-9375-03104a08f919"),
                            Name = "Job5",
                            Salary = 50.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("77de4b89-8a38-47d1-963e-1f7b687cb54e"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job6 description",
                            EmployerId = new Guid("c83d7acc-a238-4f58-9375-03104a08f919"),
                            Name = "Job6",
                            Salary = 60.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1533a99b-64d8-47aa-8f0c-10df01d93e4b"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job7 description",
                            EmployerId = new Guid("c83d7acc-a238-4f58-9375-03104a08f919"),
                            Name = "Job7",
                            Salary = 70.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2e139a48-d013-4f65-9f11-d9673af889d8"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job8 description",
                            EmployerId = new Guid("c83d7acc-a238-4f58-9375-03104a08f919"),
                            Name = "Job8",
                            Salary = 80.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4b5196aa-5897-47c9-917d-4a8901c5516c"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job9 description",
                            EmployerId = new Guid("c83d7acc-a238-4f58-9375-03104a08f919"),
                            Name = "Job9",
                            Salary = 90.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6a386cc9-4126-45ec-ac5a-6235497a04ae"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job10 description",
                            EmployerId = new Guid("c83d7acc-a238-4f58-9375-03104a08f919"),
                            Name = "Job10",
                            Salary = 100.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44341c88-555e-46a6-b4fe-3b49ff67b2f3"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("beb3df18-bbfe-4dd7-b911-26929942fd0c"),
                            SenderId = new Guid("c83d7acc-a238-4f58-9375-03104a08f919"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e099eee5-2b63-4443-9e3c-718c910854a2"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("2450bfe3-6f14-4dcd-a303-fc5269301eda"),
                            SenderId = new Guid("beb3df18-bbfe-4dd7-b911-26929942fd0c"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d5ac4519-9a03-4b03-a4ef-ec4ae0c9c18f"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("279f9707-f610-4409-a8f8-3bb5ac0d12ee"),
                            SenderId = new Guid("2450bfe3-6f14-4dcd-a303-fc5269301eda"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9a006d7c-6a87-4f9c-a333-97845e2cc088"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("fa8125ac-58bc-4594-93e4-0c05303d4b46"),
                            SenderId = new Guid("279f9707-f610-4409-a8f8-3bb5ac0d12ee"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9a25cca0-a741-4b18-904f-13dbb4c3bfab"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("5d9561f9-7ce0-4aa2-bc92-c7a826d1a998"),
                            SenderId = new Guid("fa8125ac-58bc-4594-93e4-0c05303d4b46"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f02a305e-69f8-4f91-99cf-b4e8fcee967b"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("54693490-d13b-4f1a-9963-ba5991175bd9"),
                            SenderId = new Guid("5d9561f9-7ce0-4aa2-bc92-c7a826d1a998"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6865ad78-f46a-4c92-840f-265f929568da"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("a1f1a7bb-25ff-4887-a076-b90d7598d534"),
                            SenderId = new Guid("54693490-d13b-4f1a-9963-ba5991175bd9"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("20f3ca45-c984-46cd-ac48-8ebfe7131a2a"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("ef6ac2a7-9744-46b1-9f16-88befa7a5aa3"),
                            SenderId = new Guid("a1f1a7bb-25ff-4887-a076-b90d7598d534"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("70958dba-41a4-44eb-a542-cc3260fe190c"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("d9d59f68-e255-4547-bb08-a648d0ca1c8a"),
                            SenderId = new Guid("ef6ac2a7-9744-46b1-9f16-88befa7a5aa3"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b45e7ed8-3670-4b79-af5c-f5adcbf5fef9"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("8256d54a-adc9-4c13-b430-36e462764deb"),
                            SenderId = new Guid("d9d59f68-e255-4547-bb08-a648d0ca1c8a"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("RevieweeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReviewerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RevieweeId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fc9c1579-74d4-4b53-96f6-290eaf18a80e"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 1,
                            RevieweeId = new Guid("beb3df18-bbfe-4dd7-b911-26929942fd0c"),
                            ReviewerId = new Guid("c83d7acc-a238-4f58-9375-03104a08f919"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6aec831a-efb8-485e-9e27-2ead714b9bb8"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 2,
                            RevieweeId = new Guid("2450bfe3-6f14-4dcd-a303-fc5269301eda"),
                            ReviewerId = new Guid("beb3df18-bbfe-4dd7-b911-26929942fd0c"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cf4329a8-6aa0-4b3c-804b-8870aa14c178"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 3,
                            RevieweeId = new Guid("279f9707-f610-4409-a8f8-3bb5ac0d12ee"),
                            ReviewerId = new Guid("2450bfe3-6f14-4dcd-a303-fc5269301eda"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c724ff9d-021b-4039-82f7-0d9ec285e556"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4,
                            RevieweeId = new Guid("fa8125ac-58bc-4594-93e4-0c05303d4b46"),
                            ReviewerId = new Guid("279f9707-f610-4409-a8f8-3bb5ac0d12ee"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ebea3121-e224-40c1-8a4d-a42b6db94db1"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 0,
                            RevieweeId = new Guid("5d9561f9-7ce0-4aa2-bc92-c7a826d1a998"),
                            ReviewerId = new Guid("fa8125ac-58bc-4594-93e4-0c05303d4b46"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bc555007-de72-47f1-845d-946f92a9b0d7"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 1,
                            RevieweeId = new Guid("54693490-d13b-4f1a-9963-ba5991175bd9"),
                            ReviewerId = new Guid("5d9561f9-7ce0-4aa2-bc92-c7a826d1a998"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("26ad27df-7b92-4286-bedc-3350edd065f6"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 2,
                            RevieweeId = new Guid("a1f1a7bb-25ff-4887-a076-b90d7598d534"),
                            ReviewerId = new Guid("54693490-d13b-4f1a-9963-ba5991175bd9"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a689220b-21a4-4e77-b63d-5a920db8b116"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 3,
                            RevieweeId = new Guid("ef6ac2a7-9744-46b1-9f16-88befa7a5aa3"),
                            ReviewerId = new Guid("a1f1a7bb-25ff-4887-a076-b90d7598d534"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("77b073f8-1d7f-466d-aa16-abef81200fc9"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4,
                            RevieweeId = new Guid("d9d59f68-e255-4547-bb08-a648d0ca1c8a"),
                            ReviewerId = new Guid("ef6ac2a7-9744-46b1-9f16-88befa7a5aa3"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f49175cc-272f-40ed-97d3-e83ec94129f0"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 0,
                            RevieweeId = new Guid("8256d54a-adc9-4c13-b430-36e462764deb"),
                            ReviewerId = new Guid("d9d59f68-e255-4547-bb08-a648d0ca1c8a"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("81623705-ffc2-49dd-acdf-63c9759e687e"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Programming",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6e22175f-597f-4247-827f-247255ee510a"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gardening",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("28f727e9-3fa0-4138-ae66-46b6fc61c046"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cooking",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e6170a7c-2259-4695-945b-36cdd37f0a52"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cleaning",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a36f2a1f-5d9d-4517-8a8d-57c366fc599c"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Driving",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cf1975fb-f8b7-4a2d-82b1-a3ffea52820c"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Teaching",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3c8051bf-6c4d-4241-ba2f-b203020130bb"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Writing",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f35b3e15-9e41-4999-bee9-a3cb71acecdc"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Maths",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7ccdb8b6-37cc-41cc-9a9c-16917bbf07b8"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Language",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("76206eaf-98fb-4a42-9a83-403a1697f209"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Painting",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f4243339-e0ae-4388-badb-9100858540a6"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Photography",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3436816b-3e96-4be0-9c2e-3403f084d51b"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sewing",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ApplicationUserSkill", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobSkill", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.Job", null)
                        .WithMany()
                        .HasForeignKey("JobsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Application", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Candidate")
                        .WithMany("Applications")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.Job", "Job")
                        .WithMany("Applications")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationStatus", "Status")
                        .WithMany("Applications")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Job");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Job", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Employer")
                        .WithMany("Jobs")
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employer");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Message", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Sender")
                        .WithMany("SendMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Review", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Reviewee")
                        .WithMany("ReceivedReviews")
                        .HasForeignKey("RevieweeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Reviewer")
                        .WithMany("MadeReviews")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Reviewee");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationStatus", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationUser", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Jobs");

                    b.Navigation("MadeReviews");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("ReceivedReviews");

                    b.Navigation("SendMessages");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Job", b =>
                {
                    b.Navigation("Applications");
                });
#pragma warning restore 612, 618
        }
    }
}
