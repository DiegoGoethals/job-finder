// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pri.Api.Pe.Infrastructure.Data;

#nullable disable

namespace Pri.Api.Pe.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240501150947_AddRequestedUsers")]
    partial class AddRequestedUsers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApplicationUserSkill", b =>
                {
                    b.Property<Guid>("SkillsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SkillsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ApplicationUserSkill");
                });

            modelBuilder.Entity("JobSkill", b =>
                {
                    b.Property<Guid>("JobsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("JobsId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("JobSkill");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b37d454e-3138-4fef-875e-5cc9e784e20c"),
                            ConcurrencyStamp = "4950e6ee-d2d7-4e03-8da0-f6e5d35341da",
                            Name = "Employer",
                            NormalizedName = "EMPLOYER"
                        },
                        new
                        {
                            Id = new Guid("2c94bf82-cd5f-481f-9f33-61a83d79655a"),
                            ConcurrencyStamp = "2e22cecd-72bb-433c-a9e5-a218d845fb82",
                            Name = "Employee",
                            NormalizedName = "EMPLOYEE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("d31c3484-0b65-495c-aba5-1e49ced194c8"),
                            RoleId = new Guid("2c94bf82-cd5f-481f-9f33-61a83d79655a")
                        },
                        new
                        {
                            UserId = new Guid("0dae7d06-10da-4a43-80e6-5e6a5fa225b4"),
                            RoleId = new Guid("2c94bf82-cd5f-481f-9f33-61a83d79655a")
                        },
                        new
                        {
                            UserId = new Guid("97bf7a82-5fe1-4a68-910b-4a389d0112e0"),
                            RoleId = new Guid("2c94bf82-cd5f-481f-9f33-61a83d79655a")
                        },
                        new
                        {
                            UserId = new Guid("fc9e1515-032f-4915-a090-4941a73a5f0a"),
                            RoleId = new Guid("2c94bf82-cd5f-481f-9f33-61a83d79655a")
                        },
                        new
                        {
                            UserId = new Guid("825aee24-b164-4b0d-9dbd-f4f1881bd977"),
                            RoleId = new Guid("2c94bf82-cd5f-481f-9f33-61a83d79655a")
                        },
                        new
                        {
                            UserId = new Guid("cc2c3b03-ac91-484f-a031-ffe8e167ceff"),
                            RoleId = new Guid("2c94bf82-cd5f-481f-9f33-61a83d79655a")
                        },
                        new
                        {
                            UserId = new Guid("dea5dc4b-6425-4219-a558-afdfd1716056"),
                            RoleId = new Guid("2c94bf82-cd5f-481f-9f33-61a83d79655a")
                        },
                        new
                        {
                            UserId = new Guid("44850771-875a-4df9-8f92-2cee3c5d28df"),
                            RoleId = new Guid("2c94bf82-cd5f-481f-9f33-61a83d79655a")
                        },
                        new
                        {
                            UserId = new Guid("19531dcf-cc65-48fe-b5c1-14a08ed84b0b"),
                            RoleId = new Guid("2c94bf82-cd5f-481f-9f33-61a83d79655a")
                        },
                        new
                        {
                            UserId = new Guid("7ec059dc-736a-4fa0-b71e-9170db856c36"),
                            RoleId = new Guid("2c94bf82-cd5f-481f-9f33-61a83d79655a")
                        },
                        new
                        {
                            UserId = new Guid("773f8e3f-d924-4726-9195-bc9fb0955c1d"),
                            RoleId = new Guid("b37d454e-3138-4fef-875e-5cc9e784e20c")
                        },
                        new
                        {
                            UserId = new Guid("642df0fa-a51a-4a65-a30f-735135ec2303"),
                            RoleId = new Guid("b37d454e-3138-4fef-875e-5cc9e784e20c")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("JobId");

                    b.HasIndex("StatusId");

                    b.ToTable("Applications");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cfbcb2f3-c633-4073-8c35-70606f72fda8"),
                            CandidateId = new Guid("d31c3484-0b65-495c-aba5-1e49ced194c8"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("0725f3ea-1ba2-4350-a853-2c2fe0d00869"),
                            Salary = 0.0,
                            StatusId = new Guid("d9381599-e1cc-49f5-8c0d-d6744770071c"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cd53459a-9705-456b-8722-4db9e74de91f"),
                            CandidateId = new Guid("0dae7d06-10da-4a43-80e6-5e6a5fa225b4"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("08fa7db3-affe-482d-88d0-9cfbff494e3a"),
                            Salary = 0.0,
                            StatusId = new Guid("a5ff6af1-e61f-498d-b271-95fcb0afee43"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1b75d43b-644d-4092-be4c-4e8fa95e594d"),
                            CandidateId = new Guid("97bf7a82-5fe1-4a68-910b-4a389d0112e0"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("bd26c191-4c0c-4f47-aabd-02e68426f774"),
                            Salary = 0.0,
                            StatusId = new Guid("bbe395c7-1169-4986-91d7-544c23c23109"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c4a84d27-b663-4aca-bf12-31472581ffa1"),
                            CandidateId = new Guid("fc9e1515-032f-4915-a090-4941a73a5f0a"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("5d8186a1-89b5-4b33-9592-50de5c63cc74"),
                            Salary = 0.0,
                            StatusId = new Guid("d9381599-e1cc-49f5-8c0d-d6744770071c"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d839367c-09a9-486f-9366-551aea5789ba"),
                            CandidateId = new Guid("825aee24-b164-4b0d-9dbd-f4f1881bd977"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("eaf12008-3130-4d06-b4c3-189a34dff167"),
                            Salary = 0.0,
                            StatusId = new Guid("a5ff6af1-e61f-498d-b271-95fcb0afee43"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("96af8f60-fba3-4117-bedf-6251ea272cbd"),
                            CandidateId = new Guid("cc2c3b03-ac91-484f-a031-ffe8e167ceff"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("85577dee-7a78-48e2-9f2a-bd98a83214b2"),
                            Salary = 0.0,
                            StatusId = new Guid("bbe395c7-1169-4986-91d7-544c23c23109"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6e632a85-c61b-4f90-8902-aae13d7ca0b5"),
                            CandidateId = new Guid("dea5dc4b-6425-4219-a558-afdfd1716056"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("90d1c0b4-6836-4e0d-88e0-c8f586e817a0"),
                            Salary = 0.0,
                            StatusId = new Guid("d9381599-e1cc-49f5-8c0d-d6744770071c"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("747c8a78-c178-47c3-bf5f-80d4501e9c2e"),
                            CandidateId = new Guid("44850771-875a-4df9-8f92-2cee3c5d28df"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("aed0cc12-829e-4d1f-9710-c0425cd024d6"),
                            Salary = 0.0,
                            StatusId = new Guid("a5ff6af1-e61f-498d-b271-95fcb0afee43"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1acfacf6-3366-4e81-a8f9-a4798045f18c"),
                            CandidateId = new Guid("19531dcf-cc65-48fe-b5c1-14a08ed84b0b"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("28b01933-0122-4aa9-9ecc-34c9b0ec2e99"),
                            Salary = 0.0,
                            StatusId = new Guid("bbe395c7-1169-4986-91d7-544c23c23109"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("fb99f4ae-1333-4ac9-9f88-f9d46b0c507b"),
                            CandidateId = new Guid("7ec059dc-736a-4fa0-b71e-9170db856c36"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("3de0e954-148f-4988-bf1f-fca5eeda5e37"),
                            Salary = 0.0,
                            StatusId = new Guid("d9381599-e1cc-49f5-8c0d-d6744770071c"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ApplicationStatus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d9381599-e1cc-49f5-8c0d-d6744770071c"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pending",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a5ff6af1-e61f-498d-b271-95fcb0afee43"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Accepted",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bbe395c7-1169-4986-91d7-544c23c23109"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rejected",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Lastname")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("642df0fa-a51a-4a65-a30f-735135ec2303"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "07959f04-5f0d-440e-9335-16e24320e3be",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user1@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "1",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@TEST.COM",
                            NormalizedUserName = "USER1",
                            PasswordHash = "AQAAAAEAACcQAAAAEMq10VEZWDfkQCDknD5qcYfrard3iACahJR1GlqyQzE4y5jNIDWXUISk03gngqK7pw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "efa501e9-16e1-46e1-b910-557fccca1b6c",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user1"
                        },
                        new
                        {
                            Id = new Guid("d31c3484-0b65-495c-aba5-1e49ced194c8"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "cf39fb52-121a-432e-abea-84f1f9cc7104",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user2@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "2",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@TEST.COM",
                            NormalizedUserName = "USER2",
                            PasswordHash = "AQAAAAEAACcQAAAAEL3ek5Crs3fyfHbNVzSo2W1gksFevG0wma1j0h1MMA+L7kASNVa0Q9CfQ+i3K98GXg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7b41b01e-78bc-459c-8d65-1a94837a6b23",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user2"
                        },
                        new
                        {
                            Id = new Guid("0dae7d06-10da-4a43-80e6-5e6a5fa225b4"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "45b20740-ac35-4047-97fc-d2cea9ab0b74",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user3@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "3",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@TEST.COM",
                            NormalizedUserName = "USER3",
                            PasswordHash = "AQAAAAEAACcQAAAAEMxJTeTtDUCipFZNz6hXEcpcXUd5Xb9+XHxB3bxod8L3qhCqEoF+KVdmN8vT/A+I5w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f42228d7-b4a9-4f7d-9953-14ee19150858",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user3"
                        },
                        new
                        {
                            Id = new Guid("97bf7a82-5fe1-4a68-910b-4a389d0112e0"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "832a3d4f-be21-4685-9f0f-84909dda2961",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user4@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "4",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@TEST.COM",
                            NormalizedUserName = "USER4",
                            PasswordHash = "AQAAAAEAACcQAAAAEBXY3qKIypDH3/KGDWLn0K9T7H4pXwrBfB5mn/ye41NtndAwQ3/9/aO3qx/LV3F/tw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "15c8899c-c022-4782-b3fd-13356742697f",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user4"
                        },
                        new
                        {
                            Id = new Guid("fc9e1515-032f-4915-a090-4941a73a5f0a"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ddb8acf7-cff5-4757-b02a-978709db239f",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user5@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "5",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@TEST.COM",
                            NormalizedUserName = "USER5",
                            PasswordHash = "AQAAAAEAACcQAAAAELKnGphUTjyJFlEPyT2YGcBfEavOC9mji8xPBHbXZ8dluQTpURkoCwaBqKBiM2Y1MA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "04e24fa1-6c62-4af1-ba33-d4f9942caee6",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user5"
                        },
                        new
                        {
                            Id = new Guid("825aee24-b164-4b0d-9dbd-f4f1881bd977"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "db11d053-d927-4856-8896-369a92af8e28",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user6@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "6",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@TEST.COM",
                            NormalizedUserName = "USER6",
                            PasswordHash = "AQAAAAEAACcQAAAAEPno2hY7xn5LeOV4yMyyLxXuQxpwcoSkBnQJfLdN+kfVj1tllNiEB6NyHgGyADh/bg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "15195177-cc38-4bc1-8bfe-c77571558ed9",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user6"
                        },
                        new
                        {
                            Id = new Guid("cc2c3b03-ac91-484f-a031-ffe8e167ceff"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5c31a30c-67ac-4a40-b58f-8c9679122fe7",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user7@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "7",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@TEST.COM",
                            NormalizedUserName = "USER7",
                            PasswordHash = "AQAAAAEAACcQAAAAEM0GwFaunne2fiIf/bNzQE+yMmU5IbLwKrVSvkCN0UlSjJ1EzDwItaZcK3+bPECvAw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0186eb9d-764b-4ed2-a0bc-773e5fa8edb2",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user7"
                        },
                        new
                        {
                            Id = new Guid("dea5dc4b-6425-4219-a558-afdfd1716056"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "b8c62ae4-da7c-4a7c-98d2-043baffa0e71",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user8@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "8",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@TEST.COM",
                            NormalizedUserName = "USER8",
                            PasswordHash = "AQAAAAEAACcQAAAAEGsSQXF2X/8HXIP37ub0UBJPxc6DcSR0CkIGTBIRIOBJL8gIRX+TO+qMNPamqlGe2Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c9e9ce9c-b0b0-49d8-9a67-73908246ee77",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user8"
                        },
                        new
                        {
                            Id = new Guid("44850771-875a-4df9-8f92-2cee3c5d28df"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "c3d24dd2-b982-4bf6-8071-822babf0f7e2",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user9@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "9",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@TEST.COM",
                            NormalizedUserName = "USER9",
                            PasswordHash = "AQAAAAEAACcQAAAAENhwAJkHC1BWiXol8ta4B9I9u7MipNhDhlfEWRxUpNfP9f3e6g1sDUcSh6ttrlMF6Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "51a299c7-60f6-4b2b-bfa7-bf9630395ace",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user9"
                        },
                        new
                        {
                            Id = new Guid("19531dcf-cc65-48fe-b5c1-14a08ed84b0b"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "2ff665ce-777a-4f5e-a2d5-fb0ee108a721",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user10@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "10",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER10@TEST.COM",
                            NormalizedUserName = "USER10",
                            PasswordHash = "AQAAAAEAACcQAAAAECipyUhAr3xmeba0qtYt9WCcuvfKPmEMQm0NmUuycQkx7Wad315btwCuBf9B1oknHg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e9f5dfd4-14f9-40c2-bb59-d3e7c068b681",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user10"
                        },
                        new
                        {
                            Id = new Guid("7ec059dc-736a-4fa0-b71e-9170db856c36"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "61cd65dc-2b3a-45e2-9bfd-cc3808ef928a",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user@pri.be",
                            EmailConfirmed = false,
                            Firstname = "Seed",
                            Lastname = "User",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAECHoQSHAUwd/aBrAcpd9lBg36aunMSwp/va82xtQweY6Mcb9sKL8eerx7RwrErUGkA==",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "PriUser"
                        },
                        new
                        {
                            Id = new Guid("773f8e3f-d924-4726-9195-bc9fb0955c1d"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "98ef37fe-3c1c-4330-84e0-7dcd84ac5e6b",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@pri.be",
                            EmailConfirmed = false,
                            Firstname = "Seed",
                            Lastname = "Admin",
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEFzgtikAtFhu2ecJVeqVsiyQTaHQpjwnHsaOi+nXtatFXSt1ilpFOceVzYqHF6K7jg==",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "PriAdmin"
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0725f3ea-1ba2-4350-a853-2c2fe0d00869"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job1 description",
                            EmployerId = new Guid("642df0fa-a51a-4a65-a30f-735135ec2303"),
                            Name = "Job1",
                            Salary = 10.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("08fa7db3-affe-482d-88d0-9cfbff494e3a"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job2 description",
                            EmployerId = new Guid("642df0fa-a51a-4a65-a30f-735135ec2303"),
                            Name = "Job2",
                            Salary = 20.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bd26c191-4c0c-4f47-aabd-02e68426f774"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job3 description",
                            EmployerId = new Guid("642df0fa-a51a-4a65-a30f-735135ec2303"),
                            Name = "Job3",
                            Salary = 30.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5d8186a1-89b5-4b33-9592-50de5c63cc74"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job4 description",
                            EmployerId = new Guid("642df0fa-a51a-4a65-a30f-735135ec2303"),
                            Name = "Job4",
                            Salary = 40.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("eaf12008-3130-4d06-b4c3-189a34dff167"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job5 description",
                            EmployerId = new Guid("642df0fa-a51a-4a65-a30f-735135ec2303"),
                            Name = "Job5",
                            Salary = 50.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("85577dee-7a78-48e2-9f2a-bd98a83214b2"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job6 description",
                            EmployerId = new Guid("642df0fa-a51a-4a65-a30f-735135ec2303"),
                            Name = "Job6",
                            Salary = 60.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("90d1c0b4-6836-4e0d-88e0-c8f586e817a0"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job7 description",
                            EmployerId = new Guid("642df0fa-a51a-4a65-a30f-735135ec2303"),
                            Name = "Job7",
                            Salary = 70.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("aed0cc12-829e-4d1f-9710-c0425cd024d6"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job8 description",
                            EmployerId = new Guid("642df0fa-a51a-4a65-a30f-735135ec2303"),
                            Name = "Job8",
                            Salary = 80.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("28b01933-0122-4aa9-9ecc-34c9b0ec2e99"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job9 description",
                            EmployerId = new Guid("642df0fa-a51a-4a65-a30f-735135ec2303"),
                            Name = "Job9",
                            Salary = 90.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3de0e954-148f-4988-bf1f-fca5eeda5e37"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job10 description",
                            EmployerId = new Guid("642df0fa-a51a-4a65-a30f-735135ec2303"),
                            Name = "Job10",
                            Salary = 100.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b4b867ca-fccb-4937-95d2-93f2c377ad33"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("d31c3484-0b65-495c-aba5-1e49ced194c8"),
                            SenderId = new Guid("642df0fa-a51a-4a65-a30f-735135ec2303"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ebacc839-0381-4162-8f31-dabec3727d2c"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("0dae7d06-10da-4a43-80e6-5e6a5fa225b4"),
                            SenderId = new Guid("d31c3484-0b65-495c-aba5-1e49ced194c8"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b76d4534-66e1-4c11-b8e0-69f1f7c31b55"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("97bf7a82-5fe1-4a68-910b-4a389d0112e0"),
                            SenderId = new Guid("0dae7d06-10da-4a43-80e6-5e6a5fa225b4"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8d041ebd-0575-4546-abaa-a04258d98bdb"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("fc9e1515-032f-4915-a090-4941a73a5f0a"),
                            SenderId = new Guid("97bf7a82-5fe1-4a68-910b-4a389d0112e0"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3e8433a0-cb73-45d9-8d81-669c0d2ebfd5"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("825aee24-b164-4b0d-9dbd-f4f1881bd977"),
                            SenderId = new Guid("fc9e1515-032f-4915-a090-4941a73a5f0a"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7e084ac2-dae2-4e7d-a311-65ba3d2adbd4"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("cc2c3b03-ac91-484f-a031-ffe8e167ceff"),
                            SenderId = new Guid("825aee24-b164-4b0d-9dbd-f4f1881bd977"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a8c2ae49-e25d-49f9-b799-6390e06f7c16"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("dea5dc4b-6425-4219-a558-afdfd1716056"),
                            SenderId = new Guid("cc2c3b03-ac91-484f-a031-ffe8e167ceff"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d8f1f800-dcbf-4ca4-9876-787762cf9afb"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("44850771-875a-4df9-8f92-2cee3c5d28df"),
                            SenderId = new Guid("dea5dc4b-6425-4219-a558-afdfd1716056"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("977ac140-dd39-44bd-8623-739822e2e22f"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("19531dcf-cc65-48fe-b5c1-14a08ed84b0b"),
                            SenderId = new Guid("44850771-875a-4df9-8f92-2cee3c5d28df"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6480d4a2-c5bf-4f68-99f4-093b6fa6d544"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("7ec059dc-736a-4fa0-b71e-9170db856c36"),
                            SenderId = new Guid("19531dcf-cc65-48fe-b5c1-14a08ed84b0b"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("RevieweeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReviewerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RevieweeId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc539441-7759-4bf7-94c7-176cc53406e9"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 1,
                            RevieweeId = new Guid("d31c3484-0b65-495c-aba5-1e49ced194c8"),
                            ReviewerId = new Guid("642df0fa-a51a-4a65-a30f-735135ec2303"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ac90871a-bdf7-460f-b14a-0c8a86202923"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 2,
                            RevieweeId = new Guid("0dae7d06-10da-4a43-80e6-5e6a5fa225b4"),
                            ReviewerId = new Guid("d31c3484-0b65-495c-aba5-1e49ced194c8"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c5d3945c-547f-412e-822a-e0726746e29f"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 3,
                            RevieweeId = new Guid("97bf7a82-5fe1-4a68-910b-4a389d0112e0"),
                            ReviewerId = new Guid("0dae7d06-10da-4a43-80e6-5e6a5fa225b4"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("fd623110-79f8-4001-b2c0-c4cba982976d"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4,
                            RevieweeId = new Guid("fc9e1515-032f-4915-a090-4941a73a5f0a"),
                            ReviewerId = new Guid("97bf7a82-5fe1-4a68-910b-4a389d0112e0"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2e113e58-24af-4bba-802a-9eea4c04dcd6"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 0,
                            RevieweeId = new Guid("825aee24-b164-4b0d-9dbd-f4f1881bd977"),
                            ReviewerId = new Guid("fc9e1515-032f-4915-a090-4941a73a5f0a"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ba38fff6-e8b0-4be4-ae72-4a41dbb3814e"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 1,
                            RevieweeId = new Guid("cc2c3b03-ac91-484f-a031-ffe8e167ceff"),
                            ReviewerId = new Guid("825aee24-b164-4b0d-9dbd-f4f1881bd977"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2a59c158-9c21-45c7-9608-b9c3515790ce"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 2,
                            RevieweeId = new Guid("dea5dc4b-6425-4219-a558-afdfd1716056"),
                            ReviewerId = new Guid("cc2c3b03-ac91-484f-a031-ffe8e167ceff"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ae94c023-1953-4964-9cd9-8fd3329099dc"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 3,
                            RevieweeId = new Guid("44850771-875a-4df9-8f92-2cee3c5d28df"),
                            ReviewerId = new Guid("dea5dc4b-6425-4219-a558-afdfd1716056"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("15acfb83-70d1-4c73-a2d4-e713231d0998"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4,
                            RevieweeId = new Guid("19531dcf-cc65-48fe-b5c1-14a08ed84b0b"),
                            ReviewerId = new Guid("44850771-875a-4df9-8f92-2cee3c5d28df"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("95bd655c-c9f2-485f-a181-a59bd48d5497"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 0,
                            RevieweeId = new Guid("7ec059dc-736a-4fa0-b71e-9170db856c36"),
                            ReviewerId = new Guid("19531dcf-cc65-48fe-b5c1-14a08ed84b0b"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1f30652e-de04-46dc-818e-57546eca438c"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Programming",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6993c48b-c8ee-4530-8ff8-64e9530f098c"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gardening",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("52084af5-4f16-463d-b91c-8ec15a12bacd"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cooking",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("700dbc74-4cbc-49b9-a894-041c8cb41de6"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cleaning",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("35ec3df0-da38-4ce8-ad9b-dc94831da93e"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Driving",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("40a9ac01-f650-4b46-8c2f-1c2abf7cef02"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Teaching",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ecc3be73-165f-4c2f-a841-625ec9150d6d"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Writing",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("636861c3-3fce-4b6e-b9d2-76c021c9adfc"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Maths",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6a3bccb0-feff-46b0-9cfc-7bbaddbf591b"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Language",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("30357a6c-e704-4d60-adc3-11973054838b"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Painting",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c370aa61-b6f8-4a04-8598-f73448c210cb"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Photography",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2716f8c2-65da-463e-a12a-53322e5005de"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sewing",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ApplicationUserSkill", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobSkill", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.Job", null)
                        .WithMany()
                        .HasForeignKey("JobsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Application", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Candidate")
                        .WithMany("Applications")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.Job", "Job")
                        .WithMany("Applications")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationStatus", "Status")
                        .WithMany("Applications")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Job");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Job", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Employer")
                        .WithMany("Jobs")
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employer");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Message", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Sender")
                        .WithMany("SendMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Review", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Reviewee")
                        .WithMany("ReceivedReviews")
                        .HasForeignKey("RevieweeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Reviewer")
                        .WithMany("MadeReviews")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Reviewee");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationStatus", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationUser", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Jobs");

                    b.Navigation("MadeReviews");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("ReceivedReviews");

                    b.Navigation("SendMessages");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Job", b =>
                {
                    b.Navigation("Applications");
                });
#pragma warning restore 612, 618
        }
    }
}
