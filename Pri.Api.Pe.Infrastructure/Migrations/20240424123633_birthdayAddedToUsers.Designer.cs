// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pri.Api.Pe.Infrastructure.Data;

#nullable disable

namespace Pri.Api.Pe.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240424123633_birthdayAddedToUsers")]
    partial class birthdayAddedToUsers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApplicationUserSkill", b =>
                {
                    b.Property<Guid>("SkillsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SkillsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ApplicationUserSkill");
                });

            modelBuilder.Entity("JobSkill", b =>
                {
                    b.Property<Guid>("JobsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("JobsId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("JobSkill");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("a37ba1db-ffe2-4c48-b673-e226e2aef206"),
                            ConcurrencyStamp = "e0571461-51e7-4fa5-b6da-01e256268514",
                            Name = "Employer",
                            NormalizedName = "EMPLOYER"
                        },
                        new
                        {
                            Id = new Guid("f68c2dac-72aa-46b3-b0c2-b6fdc0b08171"),
                            ConcurrencyStamp = "9c8a7429-dfe2-43ca-a133-473e139fb412",
                            Name = "Employee",
                            NormalizedName = "EMPLOYEE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("4b3d8e5c-96e1-4bc1-a308-1a9022a828c0"),
                            RoleId = new Guid("f68c2dac-72aa-46b3-b0c2-b6fdc0b08171")
                        },
                        new
                        {
                            UserId = new Guid("f8a17ace-43f0-4fcc-b670-b5a06bfb99e7"),
                            RoleId = new Guid("f68c2dac-72aa-46b3-b0c2-b6fdc0b08171")
                        },
                        new
                        {
                            UserId = new Guid("45b9931b-c0ab-4b50-854d-823d2d5eca03"),
                            RoleId = new Guid("f68c2dac-72aa-46b3-b0c2-b6fdc0b08171")
                        },
                        new
                        {
                            UserId = new Guid("4340cfc6-b2ab-4237-8b42-051672d4cc84"),
                            RoleId = new Guid("f68c2dac-72aa-46b3-b0c2-b6fdc0b08171")
                        },
                        new
                        {
                            UserId = new Guid("030748c6-bc97-4b90-ad2c-8a4a68e42aa4"),
                            RoleId = new Guid("f68c2dac-72aa-46b3-b0c2-b6fdc0b08171")
                        },
                        new
                        {
                            UserId = new Guid("5a74e57d-b6af-4f18-82f1-abe45525b0d5"),
                            RoleId = new Guid("f68c2dac-72aa-46b3-b0c2-b6fdc0b08171")
                        },
                        new
                        {
                            UserId = new Guid("516746f5-bbfb-4142-9feb-2137bf13f214"),
                            RoleId = new Guid("f68c2dac-72aa-46b3-b0c2-b6fdc0b08171")
                        },
                        new
                        {
                            UserId = new Guid("7b810efd-2974-4ca3-9a0c-cea7f612c07f"),
                            RoleId = new Guid("f68c2dac-72aa-46b3-b0c2-b6fdc0b08171")
                        },
                        new
                        {
                            UserId = new Guid("7191028b-dc33-4e2e-b370-f8a8536993e3"),
                            RoleId = new Guid("f68c2dac-72aa-46b3-b0c2-b6fdc0b08171")
                        },
                        new
                        {
                            UserId = new Guid("14a9c196-1a36-4870-ae9b-0fe36bedb7bc"),
                            RoleId = new Guid("a37ba1db-ffe2-4c48-b673-e226e2aef206")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("JobId");

                    b.HasIndex("StatusId");

                    b.ToTable("Applications");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad3bd743-2aa2-4671-9e1b-37bb98de0ac6"),
                            CandidateId = new Guid("4b3d8e5c-96e1-4bc1-a308-1a9022a828c0"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("45d0eeb0-9920-42fc-82cd-bc7168b1f4a8"),
                            Salary = 0.0,
                            StatusId = new Guid("22441512-4460-4658-bffd-e835f54cbcc8"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b7104ffa-1753-404b-b927-cb1bbd4e0da8"),
                            CandidateId = new Guid("f8a17ace-43f0-4fcc-b670-b5a06bfb99e7"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("f34b03bc-4650-44ae-a6b0-c5ad584f2832"),
                            Salary = 0.0,
                            StatusId = new Guid("71b404b0-8a68-42e5-9035-39db0db06999"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4c9f6d9b-041d-4b1b-b2db-01bac7776cd8"),
                            CandidateId = new Guid("45b9931b-c0ab-4b50-854d-823d2d5eca03"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("360a05a0-fece-4a5f-a7c7-78540dbf8571"),
                            Salary = 0.0,
                            StatusId = new Guid("689579c8-29e9-403b-a80b-4c0da4375b52"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b339115b-b092-4910-aaee-cfb8b172eeb5"),
                            CandidateId = new Guid("4340cfc6-b2ab-4237-8b42-051672d4cc84"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("314bc995-c591-4418-b8b4-d30b653b8309"),
                            Salary = 0.0,
                            StatusId = new Guid("22441512-4460-4658-bffd-e835f54cbcc8"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7cbd0c17-03a0-4cab-aad1-e9b11a8e3d8e"),
                            CandidateId = new Guid("030748c6-bc97-4b90-ad2c-8a4a68e42aa4"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("fc0c3de2-b1a1-4703-aa2b-f0ab2a2b0008"),
                            Salary = 0.0,
                            StatusId = new Guid("71b404b0-8a68-42e5-9035-39db0db06999"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a0db7b01-2bff-4f07-afb5-6808d723788c"),
                            CandidateId = new Guid("5a74e57d-b6af-4f18-82f1-abe45525b0d5"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("6a339207-b51b-431c-a12e-7628f9d93f3b"),
                            Salary = 0.0,
                            StatusId = new Guid("689579c8-29e9-403b-a80b-4c0da4375b52"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3fa3b5c5-085c-4013-bba4-6b2db2863fcb"),
                            CandidateId = new Guid("516746f5-bbfb-4142-9feb-2137bf13f214"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("50b23130-4a49-495e-947a-76561bf4b735"),
                            Salary = 0.0,
                            StatusId = new Guid("22441512-4460-4658-bffd-e835f54cbcc8"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ef17eea0-c42b-4e7f-9922-2d1e72324e9e"),
                            CandidateId = new Guid("7b810efd-2974-4ca3-9a0c-cea7f612c07f"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("38ecdf38-091c-4628-9aa9-23aa4d6b6d28"),
                            Salary = 0.0,
                            StatusId = new Guid("71b404b0-8a68-42e5-9035-39db0db06999"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("44f81a83-73eb-44b5-8d8f-dbe2cfdd60eb"),
                            CandidateId = new Guid("7191028b-dc33-4e2e-b370-f8a8536993e3"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("af24c937-fda1-4287-91e6-28faa37e60c7"),
                            Salary = 0.0,
                            StatusId = new Guid("689579c8-29e9-403b-a80b-4c0da4375b52"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ac7fd910-1160-4244-b0ed-a5ad462a96e0"),
                            CandidateId = new Guid("4b3d8e5c-96e1-4bc1-a308-1a9022a828c0"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("404a12b9-ce05-4471-9e70-f266e8c7f16e"),
                            Salary = 0.0,
                            StatusId = new Guid("22441512-4460-4658-bffd-e835f54cbcc8"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ApplicationStatus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22441512-4460-4658-bffd-e835f54cbcc8"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pending",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("71b404b0-8a68-42e5-9035-39db0db06999"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Accepted",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("689579c8-29e9-403b-a80b-4c0da4375b52"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rejected",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Lastname")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("14a9c196-1a36-4870-ae9b-0fe36bedb7bc"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "667361b2-f89b-46ba-b7f9-2f000ac73ca9",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user1@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "1",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@TEST.COM",
                            NormalizedUserName = "USER1",
                            PasswordHash = "AQAAAAEAACcQAAAAEIFmKJiLRaPFZAkaRXKkRrw3q9ALC/SdfSH9zfEGW62pmeflY0F+SqPCRhrQpIWkzQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d6c115e7-89b2-4686-9fe0-342a14cbb184",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user1"
                        },
                        new
                        {
                            Id = new Guid("4b3d8e5c-96e1-4bc1-a308-1a9022a828c0"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "dd1e11a1-cacb-49ae-8301-307c43bb2ece",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user2@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "2",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@TEST.COM",
                            NormalizedUserName = "USER2",
                            PasswordHash = "AQAAAAEAACcQAAAAEJYDbzrpSMlzuSurpLK1gyP3fsPGog4E1hVM6keszTBgJGxUavGkERPUsAQ62yAp8g==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f48d21de-5c29-4116-a342-662a64e9ce60",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user2"
                        },
                        new
                        {
                            Id = new Guid("f8a17ace-43f0-4fcc-b670-b5a06bfb99e7"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "ca07e0a4-d786-48bc-bb22-0d2050addb09",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user3@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "3",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@TEST.COM",
                            NormalizedUserName = "USER3",
                            PasswordHash = "AQAAAAEAACcQAAAAEN2EaaoFpVTOpk5KCObKAkhz74R1hBBd+mTkrMbKa+Zvin9hwCOywx7wRj1XmIQg+A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6c94de2c-39e4-4fc8-be90-3350ff5e8cac",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user3"
                        },
                        new
                        {
                            Id = new Guid("45b9931b-c0ab-4b50-854d-823d2d5eca03"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3577fa2b-d2ab-4525-9072-2b87da8f1911",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user4@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "4",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@TEST.COM",
                            NormalizedUserName = "USER4",
                            PasswordHash = "AQAAAAEAACcQAAAAEHLB1Io7zRgNL57uQvdw7W6IJqwqGFxI3bf0GpNHBhfqYzdXyaGYZnwxVlaj6STvhw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c579ff47-6edc-48e3-8556-02aba5bda210",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user4"
                        },
                        new
                        {
                            Id = new Guid("4340cfc6-b2ab-4237-8b42-051672d4cc84"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "0a22cdd0-b392-441e-bfb0-c2d407f286f5",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user5@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "5",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@TEST.COM",
                            NormalizedUserName = "USER5",
                            PasswordHash = "AQAAAAEAACcQAAAAEG2jYoMHGbpk+mxITaInAo495xsT9ygexQGQj/DvZGYn15wEyKWtabMwxuLOxRViYA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1a0cb510-aaae-4105-8fad-4e9d64435edc",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user5"
                        },
                        new
                        {
                            Id = new Guid("030748c6-bc97-4b90-ad2c-8a4a68e42aa4"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "76f5ab9e-1608-4924-9673-e47d06b143af",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user6@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "6",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@TEST.COM",
                            NormalizedUserName = "USER6",
                            PasswordHash = "AQAAAAEAACcQAAAAEIK9Yrmggs3LeUukGBBsruYVOpgLsB73YeVS2NVc1TuqCsoyphbRZOzqz1qyOswbLg==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9c3b6b5b-4945-4441-98ec-de4754f25e97",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user6"
                        },
                        new
                        {
                            Id = new Guid("5a74e57d-b6af-4f18-82f1-abe45525b0d5"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5fec5c61-2f31-4589-a7a5-70948fecddd5",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user7@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "7",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@TEST.COM",
                            NormalizedUserName = "USER7",
                            PasswordHash = "AQAAAAEAACcQAAAAENJ+d4xNxvTvkXeNwBE1a6FTKA7KYrKxmy8UWFlnXxg21Cwf9IhIhbirLo8VehaDDw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cb84c5ec-3665-473d-808d-cb900455c001",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user7"
                        },
                        new
                        {
                            Id = new Guid("516746f5-bbfb-4142-9feb-2137bf13f214"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "fa90b982-e315-492a-8ff3-a23ec27f7b58",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user8@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "8",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@TEST.COM",
                            NormalizedUserName = "USER8",
                            PasswordHash = "AQAAAAEAACcQAAAAEIaT6j7sDNkT708BLbcQOhV1MBTDuUnDRo3t32ehknomwWV38+EY7paFmFL5Rn+YDw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "48967b98-bff8-40bf-9edf-3895f3f275f9",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user8"
                        },
                        new
                        {
                            Id = new Guid("7b810efd-2974-4ca3-9a0c-cea7f612c07f"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "5f3531df-745b-45e4-91d4-57b9431c3e21",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user9@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "9",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@TEST.COM",
                            NormalizedUserName = "USER9",
                            PasswordHash = "AQAAAAEAACcQAAAAEEBxnyR0Ya3pf/PU3NKO/l5PIF5t5K2qSIKeh/DiBtKnoH9ucH8UyM61fA7Sit2D2Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8f69f06e-4f1a-4e48-a564-d6fa405e592c",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user9"
                        },
                        new
                        {
                            Id = new Guid("7191028b-dc33-4e2e-b370-f8a8536993e3"),
                            AccessFailedCount = 0,
                            Birthday = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "3cf35156-686f-4ad7-a033-47be277d9af7",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user10@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "10",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER10@TEST.COM",
                            NormalizedUserName = "USER10",
                            PasswordHash = "AQAAAAEAACcQAAAAEN3pgrT0yIXECWUx1WgIuUhK0v0uTKm7zugNcxQPVj/CyBlJseXYIvzy+61U5QEHGA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2a5e7834-c719-4128-8df0-df94bb8a72db",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user10"
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("45d0eeb0-9920-42fc-82cd-bc7168b1f4a8"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job1 description",
                            EmployerId = new Guid("14a9c196-1a36-4870-ae9b-0fe36bedb7bc"),
                            Name = "Job1",
                            Salary = 10.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f34b03bc-4650-44ae-a6b0-c5ad584f2832"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job2 description",
                            EmployerId = new Guid("14a9c196-1a36-4870-ae9b-0fe36bedb7bc"),
                            Name = "Job2",
                            Salary = 20.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("360a05a0-fece-4a5f-a7c7-78540dbf8571"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job3 description",
                            EmployerId = new Guid("14a9c196-1a36-4870-ae9b-0fe36bedb7bc"),
                            Name = "Job3",
                            Salary = 30.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("314bc995-c591-4418-b8b4-d30b653b8309"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job4 description",
                            EmployerId = new Guid("14a9c196-1a36-4870-ae9b-0fe36bedb7bc"),
                            Name = "Job4",
                            Salary = 40.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("fc0c3de2-b1a1-4703-aa2b-f0ab2a2b0008"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job5 description",
                            EmployerId = new Guid("14a9c196-1a36-4870-ae9b-0fe36bedb7bc"),
                            Name = "Job5",
                            Salary = 50.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6a339207-b51b-431c-a12e-7628f9d93f3b"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job6 description",
                            EmployerId = new Guid("14a9c196-1a36-4870-ae9b-0fe36bedb7bc"),
                            Name = "Job6",
                            Salary = 60.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("50b23130-4a49-495e-947a-76561bf4b735"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job7 description",
                            EmployerId = new Guid("14a9c196-1a36-4870-ae9b-0fe36bedb7bc"),
                            Name = "Job7",
                            Salary = 70.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("38ecdf38-091c-4628-9aa9-23aa4d6b6d28"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job8 description",
                            EmployerId = new Guid("14a9c196-1a36-4870-ae9b-0fe36bedb7bc"),
                            Name = "Job8",
                            Salary = 80.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("af24c937-fda1-4287-91e6-28faa37e60c7"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job9 description",
                            EmployerId = new Guid("14a9c196-1a36-4870-ae9b-0fe36bedb7bc"),
                            Name = "Job9",
                            Salary = 90.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("404a12b9-ce05-4471-9e70-f266e8c7f16e"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job10 description",
                            EmployerId = new Guid("14a9c196-1a36-4870-ae9b-0fe36bedb7bc"),
                            Name = "Job10",
                            Salary = 100.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("78a71677-1c60-4462-99b4-2c587cb009b2"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("4b3d8e5c-96e1-4bc1-a308-1a9022a828c0"),
                            SenderId = new Guid("14a9c196-1a36-4870-ae9b-0fe36bedb7bc"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0f3b4f69-c601-42bd-af85-e843b5fbd327"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("f8a17ace-43f0-4fcc-b670-b5a06bfb99e7"),
                            SenderId = new Guid("4b3d8e5c-96e1-4bc1-a308-1a9022a828c0"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2b46d955-30d9-43ea-afc6-9fa5733b5273"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("45b9931b-c0ab-4b50-854d-823d2d5eca03"),
                            SenderId = new Guid("f8a17ace-43f0-4fcc-b670-b5a06bfb99e7"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4b970176-a33d-4748-a4c0-35184cb590a4"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("4340cfc6-b2ab-4237-8b42-051672d4cc84"),
                            SenderId = new Guid("45b9931b-c0ab-4b50-854d-823d2d5eca03"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f81ee746-5e28-4b20-90eb-0d44c683a448"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("030748c6-bc97-4b90-ad2c-8a4a68e42aa4"),
                            SenderId = new Guid("4340cfc6-b2ab-4237-8b42-051672d4cc84"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8b98ced1-7ee7-4fee-a391-ac05ecf7e518"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("5a74e57d-b6af-4f18-82f1-abe45525b0d5"),
                            SenderId = new Guid("030748c6-bc97-4b90-ad2c-8a4a68e42aa4"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5009fe16-5535-4b36-a789-34eedcce7f46"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("516746f5-bbfb-4142-9feb-2137bf13f214"),
                            SenderId = new Guid("5a74e57d-b6af-4f18-82f1-abe45525b0d5"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3a419532-920d-4386-a23f-e33328e832b9"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("7b810efd-2974-4ca3-9a0c-cea7f612c07f"),
                            SenderId = new Guid("516746f5-bbfb-4142-9feb-2137bf13f214"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cc98ec63-ea9d-4cdc-9386-aa6fbd77ae2f"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("7191028b-dc33-4e2e-b370-f8a8536993e3"),
                            SenderId = new Guid("7b810efd-2974-4ca3-9a0c-cea7f612c07f"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("fc103acc-36a3-4f58-9eb8-224f264aa057"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("14a9c196-1a36-4870-ae9b-0fe36bedb7bc"),
                            SenderId = new Guid("7191028b-dc33-4e2e-b370-f8a8536993e3"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("RevieweeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReviewerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RevieweeId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6c83c3ee-b588-46c6-ae1d-85ef49779fc2"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 1,
                            RevieweeId = new Guid("4b3d8e5c-96e1-4bc1-a308-1a9022a828c0"),
                            ReviewerId = new Guid("14a9c196-1a36-4870-ae9b-0fe36bedb7bc"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("23fde802-f5d1-4334-9370-bbfc53acaadf"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 2,
                            RevieweeId = new Guid("f8a17ace-43f0-4fcc-b670-b5a06bfb99e7"),
                            ReviewerId = new Guid("4b3d8e5c-96e1-4bc1-a308-1a9022a828c0"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8b21a4b1-cf51-4323-ab4f-8f8ee2bc0c39"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 3,
                            RevieweeId = new Guid("45b9931b-c0ab-4b50-854d-823d2d5eca03"),
                            ReviewerId = new Guid("f8a17ace-43f0-4fcc-b670-b5a06bfb99e7"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ba8408ee-c712-40a1-800d-c10792b2406e"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4,
                            RevieweeId = new Guid("4340cfc6-b2ab-4237-8b42-051672d4cc84"),
                            ReviewerId = new Guid("45b9931b-c0ab-4b50-854d-823d2d5eca03"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3b5c883e-8562-4b7c-a72d-69b387dd2aa7"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 0,
                            RevieweeId = new Guid("030748c6-bc97-4b90-ad2c-8a4a68e42aa4"),
                            ReviewerId = new Guid("4340cfc6-b2ab-4237-8b42-051672d4cc84"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("697423d7-ec46-447a-9264-59cc31e876a6"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 1,
                            RevieweeId = new Guid("5a74e57d-b6af-4f18-82f1-abe45525b0d5"),
                            ReviewerId = new Guid("030748c6-bc97-4b90-ad2c-8a4a68e42aa4"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7a34da19-409e-4966-aed6-9dc4c048c00e"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 2,
                            RevieweeId = new Guid("516746f5-bbfb-4142-9feb-2137bf13f214"),
                            ReviewerId = new Guid("5a74e57d-b6af-4f18-82f1-abe45525b0d5"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c61e15a5-34e1-47a5-b5ec-c0b6112b2c98"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 3,
                            RevieweeId = new Guid("7b810efd-2974-4ca3-9a0c-cea7f612c07f"),
                            ReviewerId = new Guid("516746f5-bbfb-4142-9feb-2137bf13f214"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3a789810-1d02-481f-beb7-05cbcd0dcbfa"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4,
                            RevieweeId = new Guid("7191028b-dc33-4e2e-b370-f8a8536993e3"),
                            ReviewerId = new Guid("7b810efd-2974-4ca3-9a0c-cea7f612c07f"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("45cf86e2-4fb8-4601-a3c9-bbad06136db2"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 0,
                            RevieweeId = new Guid("14a9c196-1a36-4870-ae9b-0fe36bedb7bc"),
                            ReviewerId = new Guid("7191028b-dc33-4e2e-b370-f8a8536993e3"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("97cc32a8-8952-4243-a842-69d739f7df67"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Programming",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("eeb546f6-c760-4813-adb8-7023c974335e"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gardening",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("fccdc345-2aa1-47ad-87ca-02d9235eb95e"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cooking",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ab46049d-d86a-449b-a183-253dce046019"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cleaning",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5ff80d34-aa0e-43cc-8451-7384045f1353"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Driving",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7c1cd1ea-bfeb-4eea-a928-7d162654bcbc"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Teaching",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("951f271f-acc0-44a6-a733-a818a6df08de"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Writing",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ee535dd0-b8e1-4a91-94e4-2a725de99ed2"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Maths",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("98dbdba7-3814-4841-a875-866f9fb55b22"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Language",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f9bb50fa-0f29-4b44-b945-1f59a17cea92"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Painting",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f5b4af01-fcb4-4a56-91c9-1e62aa651cc3"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Photography",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("508dbaf0-c5f6-4ed4-82a3-10d327d38dd9"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sewing",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ApplicationUserSkill", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobSkill", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.Job", null)
                        .WithMany()
                        .HasForeignKey("JobsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Application", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Candidate")
                        .WithMany("Applications")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.Job", "Job")
                        .WithMany("Applications")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationStatus", "Status")
                        .WithMany("Applications")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Job");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Job", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Employer")
                        .WithMany("Jobs")
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employer");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Message", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Sender")
                        .WithMany("SendMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Review", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Reviewee")
                        .WithMany("ReceivedReviews")
                        .HasForeignKey("RevieweeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Reviewer")
                        .WithMany("MadeReviews")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Reviewee");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationStatus", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationUser", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Jobs");

                    b.Navigation("MadeReviews");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("ReceivedReviews");

                    b.Navigation("SendMessages");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Job", b =>
                {
                    b.Navigation("Applications");
                });
#pragma warning restore 612, 618
        }
    }
}
