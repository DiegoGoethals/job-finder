// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pri.Api.Pe.Infrastructure.Data;

#nullable disable

namespace Pri.Api.Pe.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240311182248_seededData")]
    partial class seededData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApplicationUserSkill", b =>
                {
                    b.Property<Guid>("SkillsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SkillsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ApplicationUserSkill");
                });

            modelBuilder.Entity("JobSkill", b =>
                {
                    b.Property<Guid>("JobsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SkillsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("JobsId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("JobSkill");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ac1fc180-682b-4e47-a9fa-7eaed458dd50"),
                            ConcurrencyStamp = "d3c4c9e1-95e2-4a28-853c-9020064a376a",
                            Name = "Employer",
                            NormalizedName = "EMPLOYER"
                        },
                        new
                        {
                            Id = new Guid("80a5cc24-b3d1-424f-a7e7-cec18b09baa9"),
                            ConcurrencyStamp = "9b2b0b25-261e-40bc-9023-03cc9acd5d15",
                            Name = "Employee",
                            NormalizedName = "EMPLOYEE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = new Guid("d5138d37-773e-494c-9e3b-149f4bf9e9c1"),
                            RoleId = new Guid("80a5cc24-b3d1-424f-a7e7-cec18b09baa9")
                        },
                        new
                        {
                            UserId = new Guid("c3478c11-1d4f-427c-80bb-c7de61ddac6c"),
                            RoleId = new Guid("80a5cc24-b3d1-424f-a7e7-cec18b09baa9")
                        },
                        new
                        {
                            UserId = new Guid("3913ba19-ed63-4480-9c6b-4dac2cee6fb0"),
                            RoleId = new Guid("80a5cc24-b3d1-424f-a7e7-cec18b09baa9")
                        },
                        new
                        {
                            UserId = new Guid("9a2e9cf2-7de5-48f0-ba28-9150e335fa60"),
                            RoleId = new Guid("80a5cc24-b3d1-424f-a7e7-cec18b09baa9")
                        },
                        new
                        {
                            UserId = new Guid("1585f7aa-fd5f-42a5-a6c6-b340a0c052a5"),
                            RoleId = new Guid("80a5cc24-b3d1-424f-a7e7-cec18b09baa9")
                        },
                        new
                        {
                            UserId = new Guid("58be952f-8294-4428-8d39-c123a686e3ce"),
                            RoleId = new Guid("80a5cc24-b3d1-424f-a7e7-cec18b09baa9")
                        },
                        new
                        {
                            UserId = new Guid("cd0fba66-bf5c-4624-84f2-f7af13a7ea9a"),
                            RoleId = new Guid("80a5cc24-b3d1-424f-a7e7-cec18b09baa9")
                        },
                        new
                        {
                            UserId = new Guid("854b2992-8b8e-4b58-aefa-dab3eb7d9c66"),
                            RoleId = new Guid("80a5cc24-b3d1-424f-a7e7-cec18b09baa9")
                        },
                        new
                        {
                            UserId = new Guid("a9140311-167f-438d-adb6-6349ca165e01"),
                            RoleId = new Guid("80a5cc24-b3d1-424f-a7e7-cec18b09baa9")
                        },
                        new
                        {
                            UserId = new Guid("08c80b26-4b3d-4b8c-828b-01bc7b62838d"),
                            RoleId = new Guid("ac1fc180-682b-4e47-a9fa-7eaed458dd50")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Application", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CandidateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CandidateId");

                    b.HasIndex("JobId");

                    b.HasIndex("StatusId");

                    b.ToTable("Applications");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b024f123-c20c-49ca-a646-e018eecd9fc5"),
                            CandidateId = new Guid("d5138d37-773e-494c-9e3b-149f4bf9e9c1"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("35e01063-1ce1-4b0b-aa6b-1e096128cf3f"),
                            Salary = 0.0,
                            StatusId = new Guid("af772102-1331-4ea1-a516-62fb0eaa6e67"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0ef0b567-b0dd-487c-a8db-8fb6f471c063"),
                            CandidateId = new Guid("c3478c11-1d4f-427c-80bb-c7de61ddac6c"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("2320310e-49cb-4774-9e7d-0092cb186ff7"),
                            Salary = 0.0,
                            StatusId = new Guid("1b0211e1-cbcc-4978-9760-726269a94c31"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e007f2e1-8ee3-4d5e-87b4-cad0d6d586c4"),
                            CandidateId = new Guid("3913ba19-ed63-4480-9c6b-4dac2cee6fb0"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("a0786985-34dd-4cf3-ad93-4532fdb9a43b"),
                            Salary = 0.0,
                            StatusId = new Guid("8d84ecb0-c0a5-4016-a247-516993ef7437"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ec68daaf-24c7-4589-bd2d-3e8572c5bf7e"),
                            CandidateId = new Guid("9a2e9cf2-7de5-48f0-ba28-9150e335fa60"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("104bf1a3-c708-4c0a-9d97-102956d4e9a9"),
                            Salary = 0.0,
                            StatusId = new Guid("af772102-1331-4ea1-a516-62fb0eaa6e67"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3a600fc3-18e0-4246-8a9d-fa506df6814a"),
                            CandidateId = new Guid("1585f7aa-fd5f-42a5-a6c6-b340a0c052a5"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("51b0e977-3982-4e2e-b86e-8bda2d2f3b27"),
                            Salary = 0.0,
                            StatusId = new Guid("1b0211e1-cbcc-4978-9760-726269a94c31"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1db21d58-a38b-4822-b5de-88291af8de74"),
                            CandidateId = new Guid("58be952f-8294-4428-8d39-c123a686e3ce"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("c7b3674b-1132-44bc-ab24-51bc7e2473c8"),
                            Salary = 0.0,
                            StatusId = new Guid("8d84ecb0-c0a5-4016-a247-516993ef7437"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f3e32823-6123-4e98-8a76-48e8c5078090"),
                            CandidateId = new Guid("cd0fba66-bf5c-4624-84f2-f7af13a7ea9a"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("0b3b1e7c-90e8-4c8f-bcd7-d24d4b5b0c0b"),
                            Salary = 0.0,
                            StatusId = new Guid("af772102-1331-4ea1-a516-62fb0eaa6e67"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e58af8b4-e4c2-4ea9-b071-24b90df9fd13"),
                            CandidateId = new Guid("854b2992-8b8e-4b58-aefa-dab3eb7d9c66"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("79868ef1-4886-41ac-96f0-814789e574db"),
                            Salary = 0.0,
                            StatusId = new Guid("1b0211e1-cbcc-4978-9760-726269a94c31"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f322608f-2166-4aed-9238-36b610fa0824"),
                            CandidateId = new Guid("a9140311-167f-438d-adb6-6349ca165e01"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("5bd157d1-3a3e-43d6-a4b4-e65729852f90"),
                            Salary = 0.0,
                            StatusId = new Guid("8d84ecb0-c0a5-4016-a247-516993ef7437"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6fa20086-f4ed-4c8f-8c17-be46087dde7c"),
                            CandidateId = new Guid("d5138d37-773e-494c-9e3b-149f4bf9e9c1"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            JobId = new Guid("1e09a542-14d7-482b-baee-578b39ae2feb"),
                            Salary = 0.0,
                            StatusId = new Guid("af772102-1331-4ea1-a516-62fb0eaa6e67"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ApplicationStatus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af772102-1331-4ea1-a516-62fb0eaa6e67"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pending",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1b0211e1-cbcc-4978-9760-726269a94c31"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Accepted",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8d84ecb0-c0a5-4016-a247-516993ef7437"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rejected",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Lastname")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("08c80b26-4b3d-4b8c-828b-01bc7b62838d"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "36eac91c-81bd-4bbc-9f98-85494bcfd33e",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user1@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "1",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER1@TEST.COM",
                            NormalizedUserName = "USER1",
                            PasswordHash = "AQAAAAEAACcQAAAAEJHx3qgCO0ZM3dGdN1nGgdliRGUYUCJeyGd916gtqyZ012czN9oEi+PDNmt5RUZUoQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "41115456-50ad-48af-b4ef-342a67cc68da",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user1"
                        },
                        new
                        {
                            Id = new Guid("d5138d37-773e-494c-9e3b-149f4bf9e9c1"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "248d8b82-0933-41e5-948a-73df51089794",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user2@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "2",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER2@TEST.COM",
                            NormalizedUserName = "USER2",
                            PasswordHash = "AQAAAAEAACcQAAAAEPttxXkpdbDZF81Gu5sAwLBdoFYE4QaFq62XzoS+o7pPG1hmHp7zUpuiII9mJPkGBw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "86600bfd-43b5-4e3f-a18c-d2f4626c6ee6",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user2"
                        },
                        new
                        {
                            Id = new Guid("c3478c11-1d4f-427c-80bb-c7de61ddac6c"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "08cd6781-959c-43a7-b493-db35931c3b6d",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user3@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "3",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER3@TEST.COM",
                            NormalizedUserName = "USER3",
                            PasswordHash = "AQAAAAEAACcQAAAAEHcbCyt+HXxjmmCBE8U+ko8MZNgJhKtdffTspyvM48QeHZffvQA4IjjkT0XgLE2SKw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9b1c5cb5-086c-46ce-9f78-1b871c0be11c",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user3"
                        },
                        new
                        {
                            Id = new Guid("3913ba19-ed63-4480-9c6b-4dac2cee6fb0"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a7db1cc0-5330-4e38-a5a8-fe3935f208a2",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user4@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "4",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER4@TEST.COM",
                            NormalizedUserName = "USER4",
                            PasswordHash = "AQAAAAEAACcQAAAAED12Gk1hmyr7rmvnSI4nWq+9l1spdnxl70ZAYN4dzzAgsyVoc1HoG0rHQKks/mALlw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "705cf664-a292-4238-835b-ab2d8d27b89f",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user4"
                        },
                        new
                        {
                            Id = new Guid("9a2e9cf2-7de5-48f0-ba28-9150e335fa60"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "eea83f73-9071-44ff-bca7-9a6290499f44",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user5@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "5",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER5@TEST.COM",
                            NormalizedUserName = "USER5",
                            PasswordHash = "AQAAAAEAACcQAAAAEFh/KVpAagkKfD3APcKJJ3zIMA3DzOSPOq6RDldHopDAG8jFz/UZN7jEQsUL9udjJQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "94a835ed-2d03-4779-8be6-af63e6ba3819",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user5"
                        },
                        new
                        {
                            Id = new Guid("1585f7aa-fd5f-42a5-a6c6-b340a0c052a5"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1d783ed1-ffbd-48fe-b093-b4fbb3d782b9",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user6@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "6",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER6@TEST.COM",
                            NormalizedUserName = "USER6",
                            PasswordHash = "AQAAAAEAACcQAAAAEPMlABuHkWJXPiwtoVafXyn23HfEZCSiz8NY+wmmstwEzmF2onj1ezCwE7UnTaHLww==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6783d745-19fa-44bd-9eb0-4446e6443bf2",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user6"
                        },
                        new
                        {
                            Id = new Guid("58be952f-8294-4428-8d39-c123a686e3ce"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b8281462-f6b7-4e89-9786-258a18c4f24f",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user7@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "7",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER7@TEST.COM",
                            NormalizedUserName = "USER7",
                            PasswordHash = "AQAAAAEAACcQAAAAEPXmtt5pJ5i4KLL+5ctiTtTpjLh/aSDTNEe3Kz51n4ny3ZeZgoQjwJETVajlDbk0+Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "444f1916-f3dd-400c-bd65-efe47f167aa5",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user7"
                        },
                        new
                        {
                            Id = new Guid("cd0fba66-bf5c-4624-84f2-f7af13a7ea9a"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "08b44ecf-ef29-43d7-8b5f-2ee41254db4c",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user8@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "8",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER8@TEST.COM",
                            NormalizedUserName = "USER8",
                            PasswordHash = "AQAAAAEAACcQAAAAEFa0yZuj2izd5l5STQwfky7rgrfZIs6nI4R17RShRo4geP+g+LbS6vx2MKIJPj6amw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b43abceb-e5c6-48da-bb93-5e695ad0049a",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user8"
                        },
                        new
                        {
                            Id = new Guid("854b2992-8b8e-4b58-aefa-dab3eb7d9c66"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ac92d149-df33-4547-8ca9-b7da6e3af788",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user9@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "9",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER9@TEST.COM",
                            NormalizedUserName = "USER9",
                            PasswordHash = "AQAAAAEAACcQAAAAEHM00UYkflefiyLVII0fTLUlvmg6gKz0BThv15NtbLNI/T4HVkLaT48GQ+YcNuWSLA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "5863928b-c516-4c16-aabf-6940077dd430",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user9"
                        },
                        new
                        {
                            Id = new Guid("a9140311-167f-438d-adb6-6349ca165e01"),
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8a9fca63-8304-4b21-8560-23697d050742",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "user10@test.com",
                            EmailConfirmed = true,
                            Firstname = "User",
                            Lastname = "10",
                            LockoutEnabled = false,
                            NormalizedEmail = "USER10@TEST.COM",
                            NormalizedUserName = "USER10",
                            PasswordHash = "AQAAAAEAACcQAAAAELhqZ3gWUI67W8qull6bGPUrewjAyNKqizAM92zuuru94m+EzgWTjJEyZOs7tqiWSA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "64b5981a-ca70-4581-8b8e-f42412273413",
                            TwoFactorEnabled = false,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserName = "user10"
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Job", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("35e01063-1ce1-4b0b-aa6b-1e096128cf3f"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job1 description",
                            EmployerId = new Guid("08c80b26-4b3d-4b8c-828b-01bc7b62838d"),
                            Name = "Job1",
                            Salary = 10.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2320310e-49cb-4774-9e7d-0092cb186ff7"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job2 description",
                            EmployerId = new Guid("08c80b26-4b3d-4b8c-828b-01bc7b62838d"),
                            Name = "Job2",
                            Salary = 20.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a0786985-34dd-4cf3-ad93-4532fdb9a43b"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job3 description",
                            EmployerId = new Guid("08c80b26-4b3d-4b8c-828b-01bc7b62838d"),
                            Name = "Job3",
                            Salary = 30.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("104bf1a3-c708-4c0a-9d97-102956d4e9a9"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job4 description",
                            EmployerId = new Guid("08c80b26-4b3d-4b8c-828b-01bc7b62838d"),
                            Name = "Job4",
                            Salary = 40.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("51b0e977-3982-4e2e-b86e-8bda2d2f3b27"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job5 description",
                            EmployerId = new Guid("08c80b26-4b3d-4b8c-828b-01bc7b62838d"),
                            Name = "Job5",
                            Salary = 50.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c7b3674b-1132-44bc-ab24-51bc7e2473c8"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job6 description",
                            EmployerId = new Guid("08c80b26-4b3d-4b8c-828b-01bc7b62838d"),
                            Name = "Job6",
                            Salary = 60.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0b3b1e7c-90e8-4c8f-bcd7-d24d4b5b0c0b"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job7 description",
                            EmployerId = new Guid("08c80b26-4b3d-4b8c-828b-01bc7b62838d"),
                            Name = "Job7",
                            Salary = 70.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("79868ef1-4886-41ac-96f0-814789e574db"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job8 description",
                            EmployerId = new Guid("08c80b26-4b3d-4b8c-828b-01bc7b62838d"),
                            Name = "Job8",
                            Salary = 80.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5bd157d1-3a3e-43d6-a4b4-e65729852f90"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job9 description",
                            EmployerId = new Guid("08c80b26-4b3d-4b8c-828b-01bc7b62838d"),
                            Name = "Job9",
                            Salary = 90.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1e09a542-14d7-482b-baee-578b39ae2feb"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Job10 description",
                            EmployerId = new Guid("08c80b26-4b3d-4b8c-828b-01bc7b62838d"),
                            Name = "Job10",
                            Salary = 100.0,
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7bef0f64-ab98-4adc-8f9c-1b28ef6a2763"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("d5138d37-773e-494c-9e3b-149f4bf9e9c1"),
                            SenderId = new Guid("08c80b26-4b3d-4b8c-828b-01bc7b62838d"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("415c84dc-f9a8-43a2-a582-0b2c2da0507f"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("c3478c11-1d4f-427c-80bb-c7de61ddac6c"),
                            SenderId = new Guid("d5138d37-773e-494c-9e3b-149f4bf9e9c1"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c510b276-ce7d-4ddb-8040-99c571c1cdaf"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("3913ba19-ed63-4480-9c6b-4dac2cee6fb0"),
                            SenderId = new Guid("c3478c11-1d4f-427c-80bb-c7de61ddac6c"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3bf02b86-46c5-4f72-879a-c3d1e9dda8c5"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("9a2e9cf2-7de5-48f0-ba28-9150e335fa60"),
                            SenderId = new Guid("3913ba19-ed63-4480-9c6b-4dac2cee6fb0"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f7749618-ed85-4b1c-ae54-75bdf3baac44"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("1585f7aa-fd5f-42a5-a6c6-b340a0c052a5"),
                            SenderId = new Guid("9a2e9cf2-7de5-48f0-ba28-9150e335fa60"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("88c7fc6f-6ff0-44a0-81a9-16168bc39e5e"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("58be952f-8294-4428-8d39-c123a686e3ce"),
                            SenderId = new Guid("1585f7aa-fd5f-42a5-a6c6-b340a0c052a5"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("75e2b60e-e1c6-466c-bc20-3cca908e6dd0"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("cd0fba66-bf5c-4624-84f2-f7af13a7ea9a"),
                            SenderId = new Guid("58be952f-8294-4428-8d39-c123a686e3ce"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c7118ef0-42c9-4b05-acba-0fc5fa1cdebf"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("854b2992-8b8e-4b58-aefa-dab3eb7d9c66"),
                            SenderId = new Guid("cd0fba66-bf5c-4624-84f2-f7af13a7ea9a"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("49179607-bc52-4628-88f2-952976ec74ca"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("a9140311-167f-438d-adb6-6349ca165e01"),
                            SenderId = new Guid("854b2992-8b8e-4b58-aefa-dab3eb7d9c66"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ebd4316a-84a6-401c-9afa-294fc72e0d98"),
                            Content = "Seeded message",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReceiverId = new Guid("08c80b26-4b3d-4b8c-828b-01bc7b62838d"),
                            SenderId = new Guid("a9140311-167f-438d-adb6-6349ca165e01"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Review", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<Guid>("RevieweeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReviewerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RevieweeId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f2191ad-3e94-4404-a714-6f878ee67ba2"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 1,
                            RevieweeId = new Guid("d5138d37-773e-494c-9e3b-149f4bf9e9c1"),
                            ReviewerId = new Guid("08c80b26-4b3d-4b8c-828b-01bc7b62838d"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9357a592-87be-416b-a5b4-6eb2365d5d80"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 2,
                            RevieweeId = new Guid("c3478c11-1d4f-427c-80bb-c7de61ddac6c"),
                            ReviewerId = new Guid("d5138d37-773e-494c-9e3b-149f4bf9e9c1"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e0923a26-7a9b-4c5a-b654-cb199e3d902c"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 3,
                            RevieweeId = new Guid("3913ba19-ed63-4480-9c6b-4dac2cee6fb0"),
                            ReviewerId = new Guid("c3478c11-1d4f-427c-80bb-c7de61ddac6c"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7db4a96f-4249-4e26-89df-fad534f0bd98"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4,
                            RevieweeId = new Guid("9a2e9cf2-7de5-48f0-ba28-9150e335fa60"),
                            ReviewerId = new Guid("3913ba19-ed63-4480-9c6b-4dac2cee6fb0"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("fbc9dafb-8dc2-489e-9707-60193de0c4cd"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 0,
                            RevieweeId = new Guid("1585f7aa-fd5f-42a5-a6c6-b340a0c052a5"),
                            ReviewerId = new Guid("9a2e9cf2-7de5-48f0-ba28-9150e335fa60"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d98f53d9-6468-4454-9494-b3b42051155b"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 1,
                            RevieweeId = new Guid("58be952f-8294-4428-8d39-c123a686e3ce"),
                            ReviewerId = new Guid("1585f7aa-fd5f-42a5-a6c6-b340a0c052a5"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5f7878bc-b881-472a-9963-f30d502d8841"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 2,
                            RevieweeId = new Guid("cd0fba66-bf5c-4624-84f2-f7af13a7ea9a"),
                            ReviewerId = new Guid("58be952f-8294-4428-8d39-c123a686e3ce"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ea8537f9-247c-4767-8654-10beb351588e"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 3,
                            RevieweeId = new Guid("854b2992-8b8e-4b58-aefa-dab3eb7d9c66"),
                            ReviewerId = new Guid("cd0fba66-bf5c-4624-84f2-f7af13a7ea9a"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("88dfe6e5-18c2-44bd-ae87-1ca49bad276a"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 4,
                            RevieweeId = new Guid("a9140311-167f-438d-adb6-6349ca165e01"),
                            ReviewerId = new Guid("854b2992-8b8e-4b58-aefa-dab3eb7d9c66"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0a5c651f-676b-4e79-8836-bea000b31eb8"),
                            Comment = "Seeded review",
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 0,
                            RevieweeId = new Guid("08c80b26-4b3d-4b8c-828b-01bc7b62838d"),
                            ReviewerId = new Guid("a9140311-167f-438d-adb6-6349ca165e01"),
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Skill", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c64a777b-49d4-4b8e-b352-a6c513382916"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Programming",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6df87cc8-45df-4dd0-abad-5508a4aee37c"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Gardening",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ce74fe74-e002-4e01-99be-96426661e8ee"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cooking",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d372a2e7-3071-4547-a4bc-8fa8de471199"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cleaning",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a488656c-e6b9-4621-a74c-3191d486d49d"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Driving",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0e660e60-a3bb-43bd-a5a0-e778c0f46323"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Teaching",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6db4cea2-d68e-42f2-81e5-3904f796bf5d"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Writing",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("755bfb5f-38ff-47cb-8656-e47ecec598f9"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Maths",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c99c4370-fc97-4916-b64c-89d3cdcbf4de"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Language",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("03c62cb0-cc8d-4647-8792-726d5e533c6a"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Painting",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("981a674c-92ea-4164-a260-95423b8d2046"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Photography",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("efdd5ae5-a08c-401d-9586-6ed75c960117"),
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sewing",
                            Updated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ApplicationUserSkill", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobSkill", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.Job", null)
                        .WithMany()
                        .HasForeignKey("JobsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Application", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Candidate")
                        .WithMany("Applications")
                        .HasForeignKey("CandidateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.Job", "Job")
                        .WithMany("Applications")
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationStatus", "Status")
                        .WithMany("Applications")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Job");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Job", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Employer")
                        .WithMany("Jobs")
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employer");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Message", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Sender")
                        .WithMany("SendMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Review", b =>
                {
                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Reviewee")
                        .WithMany("ReceivedReviews")
                        .HasForeignKey("RevieweeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pri.Api.Pe.Core.Entities.ApplicationUser", "Reviewer")
                        .WithMany("MadeReviews")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Reviewee");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationStatus", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.ApplicationUser", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Jobs");

                    b.Navigation("MadeReviews");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("ReceivedReviews");

                    b.Navigation("SendMessages");
                });

            modelBuilder.Entity("Pri.Api.Pe.Core.Entities.Job", b =>
                {
                    b.Navigation("Applications");
                });
#pragma warning restore 612, 618
        }
    }
}
